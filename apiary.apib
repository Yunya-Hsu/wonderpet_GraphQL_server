FORMAT: 1A
HOST: http://localhost:7080/api/

#UniFi Protect API


## Group AudioLevels

Retrieve AudioLevels.
 
### Get audiolevels of camera [GET /audiolevels/{id}{?start,end}]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Camera.
    + start: `1464299823082` (required, number) - start time
    + end: `1464299940863` (required, number) - end time

+ Response 200 (application/json)
    + Attributes (audioLevels)
 

## Group Auth

Local User Authentication.
 
### Get Access Key [POST /auth/access-key]

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes
        + accessKey (string) - Access key to use
 

## Group Backups

Import and export backups.
 
### Backups [/backups]
 
### List Backups [GET /backups]

+ Request (application/json)

+ Response 200 (application/json)
 
### Import a backup [POST /backups/import]

+ Request (multipart/form-data; boundary=---BOUNDARY)

    ```
    -----BOUNDARY
    Content-Disposition: form-data; name="file"; filename="backup.zip"
    Content-Type: application/zip
    Content-Transfer-Encoding: binary

    $binarydata
    -----BOUNDARY
    ```

+ Response 200 (application/json)
 
### Create a new Backup [POST /backups]

+ Request (application/json)

+ Response 200 (application/json)
 
### Download a Backup [GET /backups/:id]

+ Request (application/json)

+ Response 200 (application/json)
 
### Restore a Backup [POST /backups/:id/restore]

+ Request (application/json)

+ Response 200 (application/json)
 
### Delete a Backup [DELETE /backups/:id]

+ Request (application/json)

+ Response 200 (application/json)
 

## Group Bootstrap

Data for bootstraping a client
 
### Get Bootstrap data [GET /bootstrap]

+ Request Authenticated (application/json)

    + Headers

        ```
        Authorization: Bearer eyJhbDciOiJIUzI1NiIsInR5fCI6IkpXVCJ9.eyJpZCI6IjU5YzE4MzYzMDJmZTM-3MDFmNTAwMDNlYSIsImlhdCI6MTUwNTg1NDMxNX0.MeenHAkFEuhdwchY5qYP2KecJyqtggbZV7fuFzVizW8
        ```

+ Response 200 (application/json)
    + Attributes
        + nvr (object)
        + cameras (array)
        + viewers (array)
        + lights (array)
        + bridges (array)
        + sensors (array)
        + doorlocks (array)
        + users (array)
        + groups (array)
        + liveviews (array)
        + authUserId: 59c1836302fe3701f50003ea (string)
        + lastUpdateId: f20170a3-418b-4b32-80c6-e2ae51c36824 (string)
        + accessKey (string)
        + deviceGroups (array)

+ Request Unauthenticated (application/json)

+ Response 401 (application/json)
    + Attributes
        + nvr
            + id: 59c0d07d0250fb01f50003e9 (string)
            + isSetup: true (boolean)
            + mac: 060000060E00 (string)
            + name: Home (string)
            + type: UVC-NVR (string)
            + version: `4.0.0-0.0.0` (string)
        + cameras (array)
        + users (array)
        + groups (array)
        + liveviews (array)
        + authUserId: null
        + accessKey: null


## Group Bridges
 
## Bridges Collection [/bridges]
 
### List All Bridges [GET]

+ Response 200 (application/json)
    + Attributes (bridges)
 
### Bridge [/bridges/{id}]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the bridge.
 
### Get a Bridge [GET]

+ Response 200 (application/json)
    + Attributes (bridge)
 
### Update a Bridge [PATCH]

+ Request (application/json)
    + Attributes (bridge)

+ Response 200 (application/json)
    + Attributes (bridge)
 
### Unadopt a Bridge [POST /bridges/{id}/unadopt]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Bridge.

+ Response 200 (application/json)
   + Attributes (bridge)
 
### Delete a Bridge [DELETE]

+ Response 200 (application/json)
    + Attributes
       + success (boolean) - If delete was successful
 

## Group Cameras

Retrieve, update and add new cameras.
 
## Cameras Collection [/cameras{?unmanaged}]
 
### List All Cameras [GET]

+ Response 200 (application/json)
    + Attributes (cameras)
 
### Add Cameras [POST /cameras/add]

 This will instruct the NVR to connect to the supplied host(s) and get snapshot/info about the camera(s).
 Useful if cameras can not be discovered automatically via UBNT discovery protocol.
 If manage=true it will also manage the cameras

+ Request (application/json)
    + Attributes
        + hosts (required, array) - A list of hosts to add
        + manage (optional, boolean) - Manage the cameras.
            + Default: `false`

+ Response 200 (application/json)
   + Attributes (camera)
 
### Scan for Cameras [POST /cameras/scan]

 Trigger a manual UBNT Discovery scan, searching for cameras. Returns a full list of cameras, after the scan.

+ Response 200 (application/json)
    + Attributes (cameras)
 
### Adopt Cameras [POST /cameras/adopt]

+ Attributes
    + cameras (required, object) - Key/value pair (id/name) for cameras you want to manage.

+ Response 200 (application/json)
   + Attributes
     + adopted (array) - A list of newly adopted camera ids
     + errors (object) - A map of errors by camera id.
 
## Camera Pairing [/cameras/manage-payload]
 
### Get Manage Payload [GET /cameras/manage-payload{?model,firmwareVersion,deviceId}]

+ Parameters
    + model: `UVC-G4-Pro` (required, string) - The camera model
    + firmwareVersion: `4.31.8` (required, required) - The camera firmware
    + deviceId: `f303e993-5329-4e25-8ee5-fea5b7dea81a` (required, string) - The unique camera identifier.

+ Response 200 (application/json)
 
### Camera [/cameras/{id}]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Camera.
 
### Get a Camera [GET]

+ Response 200 (application/json)
    + Attributes (camera)
 
### Update a Camera [PATCH]

+ Request (application/json)
    + Attributes (camera)

+ Response 200 (application/json)
    + Attributes (camera)
 
### Delete a Camera [DELETE]

+ Response 200 (application/json)
    + Attributes
       + success (boolean) - If delete was successful
 
### Get a Snapshot [GET /cameras/{id}/snapshot{?w,h}]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Camera.
    + w: `480` (optional, number) - Width
    + h: `180` (optional, number) - Height

+ Response 200 (image/jpeg)
 
### Get a Snapshot [GET /cameras/{id}/package_snapshot{?w,h}]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Camera.
    + w: `480` (optional, number) - Width
    + h: `180` (optional, number) - Height

+ Response 200 (image/jpeg)
 
### Adopt a Camera [POST /cameras/{id}/adopt]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Camera.

+ Response 200 (application/json)
   + Attributes (camera)
 
### Readopt a Camera [POST /cameras/{id}/readopt{?reset}]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Camera.
    + reset: `false` (optional, boolean) - Reset the camera history data before readopting. (default: false)

+ Response 200 (application/json)
    + Attributes (camera)
 
### Unadopt a Camera [POST /cameras/{id}/unadopt]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Camera.

+ Response 200 (application/json)
   + Attributes (camera)
 
### Transfer a Camera Management [POST /cameras/{id}/transfer-mgmt]
*Stackable Only\**

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Camera.

+ Request (application/json)
    + Attributes
        + nvrMac: `FCECDA1F2627`  - The mac of the transfer target NVR.
        + preserveRecording: `false` (optional, boolean) - Preserve camera recordings/data on the original NVR or not. (default: false)

+ Response 200 (application/json)
   + Attributes (camera)
 
### Reboot a Camera [POST /cameras/{id}/reboot]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Camera.

+ Response 200 (application/json)
   + Attributes (camera)
 
### Reset a Camera to Defaults [POST /cameras/{id}/reset]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Camera.

+ Response 200 (application/json)
   + Attributes (camera)
 
### Reset ISP Settings for a Camera [POST /cameras/{id}/reset-isp]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Camera.

+ Response 200 (application/json)
   + Attributes (camera)
 
## Talkback [/cameras/{id}/talkback]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Camera.
 
### Get talkback settings [GET]

+ Response 200 (application/json)
    + Attributes (talkbackSettings)
 
### Change talkback settings [PATCH]

+ Request (application/json)
    + Attributes (talkbackSettings)

+ Response 200 (application/json)
    + Attributes (talkbackSettings)
 
### Mute Camera talkback speaker for Homekit. [POST /cameras/{id}/homekit-talkback-speaker-muted]

+ Request (application/json)
    + Attributes
        + muted (required, boolean) - whether mute talkback speaker or not.

+ Response 200 (application/json)
    + Attributes
        + success (boolean) - result of muting
 
### Turn on flash-light (30 seconds). [POST /cameras/{id}/turnon-flashlight]
*To keep LED on, FE/ mobile should send API request continually (every 25 seconds)\**

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Camera.

+ Response 200 (application/json)
   + Attributes (camera)
 
## Live-heatmap [/cameras/{id}/live-heatmap]
*WebRTC Only\**

 Opens a new live-heatmap data channel and returns the name of the channel.

### Open a live-heatmap channel [GET /cameras/{id}/live-heatmap{?frameDurationMs,label}]

+ Parameters
    + frameDurationMs: `200` (optional, number)
    + label (optional, string) - Label/name to use for the WebRTC data channel

+ Response 200 (application/json)
    + Attributes
        + channelName: ABCD:123 (string) - The name of the channel which will be opened to serve the live-heatmaps.
 
### Enable ptz for starting control [GET /cameras/{id}/enable-control]
*PTZ Only\**

+ Response 200 (application/json)
    + Attributes
        success (boolean) - If enable command was executed successfully
 
### Disable ptz for stopping control [GET /cameras/{id}/disable-control]
*PTZ Only\**

+ Response 200 (application/json)
    + Attributes
        success (boolean) - If disable command was executed successfully
 
### Move the ptz to the given relative position [POST /cameras/{id}/move]
*PTZ Only\**

+ Request (application/json)
    + Attributes
        + type (required, string) - enum: `center`, `relative`, `continuous`, `privacyZone`, `zoom`
        + payload (required, object) - The options of ptz function
        + payload.panPos (optional, number) - For `relative` mode (-4095 to 4095)
        + payload.tiltPos (optional, number) - For `relative` mode (-4095 to 4095)
        + payload.zoomPos (optional, number) - For `zoom` mode (0 to zoom.steps.max)
        + payload.panSpeed (optional, number) - For `relative` mode normalized (0 to 1000) [deprecated (0 to 23)]
        + payload.tiltSpeed (optional, number) - For `relative` mode normalized (0 to 1000) [deprecated (0 to 23)]
        + payload.zoomSpeed (optional, number) - For `zoom` mode noramalized (0 to 1000), [deprecated (0 to 7)]
        + payload.scale (optional, string) - For `relative`, `zoom`, new API should always include with 'normalized'
        + payload.x (optional, number) - For `center`(0-1000), `continuous`(-1000-1000) mode
        + payload.y (optional, number) - For `center`(0-1000), `continuous`(-1000-1000) mode
        + payload.z (optional, number) - For `center`(0-1000), `continuous`(-1000-1000) mode
        + payload.id (optional, number) - For `privacyZone` mode, privacy zone ID

+ Response 200 (application/json)
    + Attributes
       + success (boolean) - If delete was successful
 
### Get the ptz current position [GET /cameras/{id}/ptz/position]
*PTZ Only\**

+ Response 200 (application/json)
    + Attributes
       + degree (object) - ptz position in degree
       + steps (object) - ptz position in steps
 
### Set PTZ current position as homeview [POST /cameras/{id}/ptz/home]
*PTZ Only\**

+ Response 200 (application/json)
    + Attributes
        + slot (number) - preset id, -1
        + ptz (ptz) - preset position
        + snapshot (string) - snapshot url
 
### Get PTZ home [GET /cameras/{id}/ptz/home]
PTZ Only\**
+ Response 200 (application/json)
    + Attributes
        + slot (number) - preset id, -1
        + ptz (ptz) - preset position
        + snapshot (string) - snapshot url
+ Response 404 (application/json)

### Create PTZ preset at current position [POST /cameras/{id}/ptz/preset]
*PTZ Only\**

+ Request (application/json)
    + Attributes
        + id (string) - camera id
        + name (string) - preset name (default 'Preset' if not provide)

+ Response 200 (application/json)
    + Attributes
        + id (string)
        + slot (number) - preset id, 0..9, auto generate if not provided
        + ptz (ptz) - preset position
        + snapshot (string) - snapshot url
        + name (string) - preset name
 
### Update PTZ preset [PATCH /cameras/{id}/ptz/preset/{slot}]
*PTZ Only\**

+ Request (application/json)
    + Attributes
        + id (string) - camera id
        + slot (string) - slot id
        + name (string) - preset name

+ Response 200 (application/json)
    + Attributes
        + id (string)
        + slot (number) - preset id, 0..9
        + ptz (ptz) - preset position
        + snapshot (string) - snapshot url
        + name (string) - preset name
 
### PTZ presets list [GET /cameras/{id}/ptz/preset]
*PTZ Only\**

+ Response 200 (application/json)
    + Attributes(array[object])
       + (object)
          + id (string)
          + slot (number) - preset id, 0..9
          + ptz (array[ptz]) - preset position
          + snapshot (string) - snapshot url
          + name (string) - preset name
 
### Delete PTZ preset [DELETE /cameras/{id}/ptz/preset/{slot}]
*PTZ Only\**

+ Response 200 (application/json)
    + Attributes
        + success (boolean) - true
 
### Get PTZ preset snapshot [GET /cameras/{id}/ptz/snapshot/{slot}{?w,h}]
*PTZ Only\**

+ Response 200 (image/jpeg)
 
### Goto PTZ preset position [POST /cameras/{id}/ptz/goto/{slot}]
*PTZ Only\**

+ Response 200 (application/json)
    + Attributes
        + success (boolean) - true
 
### Get a Snapshot from Recording [GET /cameras/{id}/recording-snapshot{?w,h,ts,start,end,lens}]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Camera.
    + w: `480` (optional, number) - Width
    + h: `180` (optional, number) - Height
    + ts: `1625646435052` (required, number) - The timestamp of recording snapshot
    + start: `1464299823082` (required, number) - A `switch-mandatory` if ts not provided
    + end: `1464299940863` (required, number) - A `switch-mandatory` if ts not provided
    + lens: 2 (optional, number) - Lens index, if there are multiple cameras in the device.

+ Response 200 (image/jpeg)
 
### Get an Analytics Heatmap [GET /cameras/analytics-heatmap{?start,end,type}]

+ Parameters
    + start: `1464299823082` (required, number) - The start timestamp of analytics heatmap
    + end: `1464299940863` (required, number) - The end timestamp of analytics heatmap
    + type: `person` (optional, string) - detection type. (default: person)
        - person
        - vehicle
        - motion

+ Response 200 (image/png)
 
### Get Analytics Detections [GET /cameras/analytics-detection{?start,end,step}]

+ Parameters
    + start: `1464299823082` (required, number) - The start timestamp of analytics heatmap
    + end: `1464299940863` (required, number) - The end timestamp of analytics heatmap
    + step: `30` (optional, string) - detection step period in minutes. (default: 30)

+ Response 200 (application/json)
    + Attributes (detections)
        - (array) - A list of detection objects
            - (object) - detection
                + detect_count
                    + person: 32 (number)
                    + vehicle: 0 (number)
                + timestamp (array) - start/end step time period
 
### Get list of APs that camera can connect to. [GET /cameras/{id}/wifi-list]

+ Response 200 (application/json)
    + Attributes (array)
        + (object)
            + authSuites (string) - Authentication Suites
            + channel (array) - The list of wifi channels
            + encryption (string) - encryption
            + essid (string) - Extended Service Set Identification
            + mac (array) - mac addresses of wifi AP
            + quality (string) - Signal-to-Noise ratio
            + signalLevel (number) - Received signal strength indicator
 
### Setup Camera Wi-Fi settings. [POST /cameras/{id}/wifi-setup]

+ Request (application/json)
    + Attributes
        + essid (required, string) - essid of target Wifi network
        + psk (required, string) - password, plain text

+ Response 200 (application/json)
    + Attributes
        + success (boolean) - result of setting wifi
 
### Get Playback History [GET /cameras/{id}/playback-history{?start,end,resolution,lens}]

+ Parameters
    + start: `1464299823082` (required, number) - The start timestamp of playback history
    + end: `1464299940863` (required, number) - The end timestamp of playback history
    + resolution: 0 (optional, number) - HIGH: 0, MID: 1, LOW: 2
    + lens: 2 (optional, number) - Lens index, if there are multiple cameras in the device.

+ Response 200 (application/json)
    + Attributes (detections)
        - (array) - A list of playback interval objects
            - (object) - playback inverval
                + start: 100 (number) - start of interval
                + end: 200 (number) - end of interval
 
### Get Camera stream sharing status. [GET /cameras/{id}/sharedStream]

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes
        + enabled (boolean) - whether the camera sharing is enabled
        + expires (number) - unix timestamp of shared link expiry
        + shareLink (string) - external link to view the shared stream
        + sharedByUser (string) - user who shared the camera stream
        + nvr (string) - console name
        + cameraName (string) - camera name
        + cameraType (string) - camera type
        + image (string) - fingerprint image
        + maxStreams (number) - maximum of simultaneous streams for this camera
 
### Enable Camera stream sharing. [POST /cameras/{id}/sharedStream]

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes
        + enabled (boolean) - whether the camera sharing is enabled
        + expires (number) - unix timestamp of shared link expiry
        + shareLink (string) - external link to view the shared stream
        + sharedByUser (string) - user who shared the camera stream
        + nvr (string) - console name
        + cameraName (string) - camera name
        + cameraType (string) - camera type
        + image (string) - fingerprint image
        + maxStreams (number) - maximum of simultaneous streams for this camera
 
### Disable Camera stream sharing. [DELETE /cameras/{id}/sharedStream]

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes
        + success (boolean) - result
 
### Get a authToken of Camera [GET /cameras/{id}/authToken]

+ Response 200 (application/json)
    + Attributes
        + token (string) - authToken
 
### whether use global Settings for Camera [POST /cameras/{id}/globalSetting]

+ Request (application/json)
    + Attributes
        + useGlobal (required, boolean) - whether use global settings
+ Response 200 (application/json)
    + Attributes (cameras)
 
### update camera firmware [POST /cameras/{id}/update]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Camera.

+ Response 200 (application/json)
    + Attributes (cameras)
 

## Group Chimes
 
## Chimes Collection [/chimes]
 
### List All Chimes [GET]

+ Response 200 (application/json)
    + Attributes (chimes)
 
### Chime [/chimes/{id}]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the chime.
 
### Get a Chime [GET]

+ Response 200 (application/json)
    + Attributes (chime)
 
### Update a Chime [PATCH]

+ Request (application/json)
    + Attributes (chime)

+ Response 200 (application/json)
    + Attributes (chime)
 
### Unadopt a Chime [POST /chimes/{id}/unadopt]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the chime.

+ Response 200 (application/json)
   + Attributes (chime)
 
### Play the Chime Speaker [POST /chimes/{id}/play-speaker]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the chime.

+ Response 200 (application/json)
   + Attributes (chime)
 
### Play the Chime Buzzer [POST /chimes/{id}/play-buzzer]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the chime.

+ Response 200 (application/json)
   + Attributes (chime)
 
### Delete a Chime [DELETE]

+ Response 200 (application/json)
    + Attributes
       + success (boolean) - If delete was successful
 
### Reboot a Chime [POST /chimes/{id}/reboot]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the chime.

+ Response 200 (application/json)
   + Attributes (chime)
 
### Set the uplink WiFi ssid and password [POST /chimes/{id}/wifi-setup]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the chime.

+ Request (application/json)
    + Attributes
        + essid (required, string) - essid of target Wifi network
        + psk (required, string) - password, plain text

+ Response 200 (application/json)
    + Attributes
        + success (boolean) - result of setting wifi
 
### update chime firmware [POST /chimes/{id}/update]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Chime.

+ Response 200 (application/json)
    + Attributes (chime)
 
### Readopt a Chime [POST /chimes/{id}/readopt{?reset}]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the chime.
    + reset: `false` (optional, boolean) - Reset the chime history data before readopting. (default: false)

+ Response 200 (application/json)
    + Attributes (chime)
 

### Get indexed labels [GET /detection-search/labels]

+ Response 200 (application/json)
   + Attributes(object)
     + colors (array) - A list of color label
     + devices (array) - A list of devices label
     + eventTypes (array) - A list of event type label
     + vehicleTypes (array) - A list of vehicle type label
     + smartDetectTypes (array) - A list of smart detect type label
     + audioTypes (array) - A list of audio type label
     + extras (array) - A list of extra label

 
### Get migration progress [GET /detection-search/progress]

+ Response 200 (application/json)
   + Attributes
      + Progress(number)

 
### Get search result [GET /detection-search?{?start,end,labels,fuzzys,limit,offset,orderDirection}]

+ Parameters
    + start: `1464299823082` (required, number) - Filter out events < start (unix timestamp)
    + end: `1464299940863` (required, number) - Filter out events > end (unix timestamp)
    + labels: `color:red,vehicleType:van` (optional, array) - indexed labels
    + fuzzys: `ABC3321` (optional, array) - non-indexable keywords (licensePlate)
    + limit: `50` (optional, number) - Maximum number of results to return
    + offset: `100` (optional, number) - Number of events to skip (e.g. (page number - 1) * number of events per page)
    + orderDirection: `ASC|DESC` (optional, string) - order direction of events

+ Response 200 (application/json)
    + Attributes
       +  events(array)
       +  execTime(number)

 

## Group Devices

Retrieve new devices.
 
## Devices Collection [/devices]
 
### List All Devices Keyed by deviceType [GET]

+ Response 200 (application/json)
    + Attributes
        + bridges (object)
        + cameras (object)
        + lights (object)
        + sensors (object)
        + viewers (object)
        + chimes (object)
 
### Adopt Devices [POST /devices/adopt]

+ Request (application/json)
    + Attributes
        + bridges (object) - Info for bridges you want to adopt
            + *{bridge.id}* (object) - Bridge ID
                + name: `Bridge Name` (string) - Target name for the bridge
                + password: `Bridge Password` (string) - the password of the bridge
        + cameras (object) - Info for cameras you want to adopt
            + *{camera.id}* (object) - Camera ID
                + name: `Camera Name` (string) - Target name for the camera
                + password: `Camera Password` (string) - the password of the camera
        + doorlocks (object) - Info for doorlocks you want to adopt
            + *{doorlock.id}* (object) - Camera ID
                + name: `Doorlock Name` (string) - Target name for the doorlock
        + lights (object) - Info for lights you want to adopt
            + *{light.id}* (object) - Light ID
                + name: `Light Name` (string) - Target name for the light
                + password: `Light Password` (string) - the password of the light
        + sensors (object) - Info for sensors you want to adopt
            + *{sensor.id}* (object) - Sensor ID
                + name: `Sensor Name` (string) - Target name for the sensor
        + viewers (object) - Info for viewers you want to adopt
            + *{viewer.id}* (object) - Viewer ID
                + name: `Viewer Name` (string) - Target name for the viewer
                + password: `Viewer Password` (string) - the password of the viewer
        + chimes (object) - Info for chimes you want to adopt
            + *{chime.id}* (object) - Chime ID
                + name: `Chime Name` (string) - Target name for the chime
                + password: `Chime Password` (string) - the password of the chime

+ Response 200 (application/json)
    + Attributes
        + bridges (object) - Adoption status for bridges
            + *{bridge.id}* (object) - Bridge ID
                + adopted: `false` (boolean) - Status whether bridge was successfully adopted
                + error (optional, object)
                    + code: `404` (number) - Error code
                    + message: `Device Not Found` (string) - Error message
        + cameras (object) - Adoption status for cameras
            + *{camera.id}* (object) - Camera ID
                + adopted: `false` (boolean) - Status whether camera was successfully adopted
                + error (optional, object)
                    + code: `404` (number) - Error code
                    + message: `Device Not Found` (string) - Error message
        + doorlocks (object) - Adoption status for doorlocks
            + *{doorlock.id}* (object) - Doorlock ID
                + adopted: `false` (boolean) - Status whether doorlock was successfully adopted
                + error (optional, object)
                    + code: `404` (number) - Error code
                    + message: `Device Not Found` (string) - Error message
        + lights (object) - Adoption status for lights
            + *{light.id}* (object) - Light ID
                + adopted: `false` (boolean) - Status whether light was successfully adopted
                + error (optional, object)
                    + code: `404` (number) - Error code
                    + message: `Device Not Found` (string) - Error message
        + sensors (object) - Adoption status for sensors
            + *{sensor.id}* (object) - Sensor ID
                + adopted: `false` (boolean) - Status whether sensor was successfully adopted
                + error (optional, object)
                    + code: `404` (number) - Error code
                    + message: `Device Not Found` (string) - Error message
        + viewers (object) - Adoption status for viewers
            + *{viewer.id}* (object) - Viewer ID
                + adopted: `false` (boolean) - Status whether viewer was successfully adopted
                + error (optional, object)
                    + code: `404` (number) - Error code
                    + message: `Device Not Found` (string) - Error message
        + chimes (object) - Adoption status for chimes
            + *{chime.id}* (object) - Chime ID
                + adopted: `false` (boolean) - Status whether chime was successfully adopted
                + error (optional, object)
                    + code: `404` (number) - Error code
                    + message: `Device Not Found` (string) - Error message
 
### Get Device Manage Payload [GET /devices/manage-payload{?model,firmwareVersion,deviceId}]

+ Parameters
    + model: `UP-Chime` (required, string) - The device model
    + firmwareVersion: `4.31.8` (optional, string) - The device firmware
    + deviceId: `f303e993-5329-4e25-8ee5-fea5b7dea81a` (optional, string) - The unique device identifier (aka, anonymous_device_id).

+ Response 200 (application/json)
 
### List All Device-Groups [GET /device-groups]

+ Response 200 (application/json)
    + Attributes (deviceGroups)
 
### Create Device-Group [POST /device-groups]

+ Request (application/json)
    + Attributes
        + name (required, string) - Name of custom group
        + items (required, array) - Items of custom group

+ Response 200 (application/json)
    + Attributes (deviceGroup)
 
### Get a Device-Group [GET /device-groups/:id]

+ Response 200 (application/json)
    + Attributes (deviceGroup)
 
### Update a Device-Group [PATCH /device-groups/:id]

+ Request (application/json)
    + Attributes (deviceGroup)

+ Response 200 (application/json)
    + Attributes (deviceGroup)
 
### Update the device items in Device-Group [PATCH /device-groups/:id/items]

+ Request (application/json)
    + Attributes(object)
        + id: true (required, boolean) - item.id you want to add or remove in the device-group; true means add into the device-group, false means remove from the device-group

+ Response 200 (application/json)
    + Attributes (deviceGroup)
 
### Delete a Device-Group [DELETE /device-groups/:id]

+ Response 200 (application/json)
    + Attributes
       + success (boolean) - If delete was successful
 
### Add device(s) in Device-Group(s) [PUT /device-groups{?groupId,deviceId}]

+ Response 200 (application/json)
    + Attributes
       + success (boolean) - If delete was successful
 
### Delete device(s) in Device-Group(s) [DELETE /device-groups{?groupId,deviceId}]

+ Response 200 (application/json)
    + Attributes
       + success (boolean) - If delete was successful
 
### update firmware of all updatable devices [POST /devices/updateAll]

+ Response 200 (application/json)
    + Attributes
        + bridges (object)
        + cameras (object)
        + lights (object)
        + sensors (object)
        + viewers (object)
        + chimes (object)
 

## Group Doorlocks
 
## Doorlocks Collection [/doorlocks]
 
### List All Doorlocks [GET]

+ Response 200 (application/json)
    + Attributes (doorlocks)
 
### Doorlock [/doorlocks/{id}]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the doorlock.
 
### Get a Doorlock [GET]

+ Response 200 (application/json)
    + Attributes (doorlock)
 
### Update a Doorlock [PATCH]

+ Request (application/json)
    + Attributes (doorlock)

+ Response 200 (application/json)
    + Attributes (doorlock)
 
### Unadopt a Doorlock [POST /doorlocks/{id}/unadopt]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Doorlock.

+ Response 200 (application/json)
    + Attributes (doorlock)
 
### Delete a Doorlock [DELETE]

+ Response 200 (application/json)
    + Attributes
        + success (boolean) - If delete was successful
 
### Reboot a Doorlock [POST /doorlocks/{id}/reboot]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Doorlock.

+ Response 200 (application/json)
    + Attributes (doorlock)
 
### Locate a Doorlock [POST /doorlocks/{id}/locate]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Doorlock.

+ Response 200 (application/json)
    + Attributes (doorlock)
 
### Close Doorlock [POST /doorlocks/{id}/close]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Doorlock.

+ Response 200 (application/json)
    + Attributes (doorlock)
 
### Open Doorlock [POST /doorlocks/{id}/open]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Doorlock.

+ Response 200 (application/json)
    + Attributes (doorlock)
 
### Calibrate Doorlock [POST /doorlocks/{id}/calibrate]

Manual calibration requires steps in order, first initiate manual calibration (auto: false), then acknowledge
CLOSED state (auto: false, lockStatus: "CLOSED") for doorlock and then OPEN (auto: false, lockStatus: "OPEN")

Manual calibration steps:
  1. send { "auto": false } and wait when device lockStatus changes to CALIBRATION_WAITING_CLOSE
  2. send { "auto": false, lockStatus: "CLOSED" } and wait when device lockStatus changes to CALIBRATION_WAITING_OPEN
  3. send { "auto": false, lockStatus: "OPEN" }

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Doorlock.
+ Attributes
    + auto: true (required, boolean) - Determines is calibration automatic or manual
    + lockStatus: OPEN (optional, enum[string]) - In case of manual calibration lockStatus sets when doorlock is in expected position
        + Members
            + OPEN
            + CLOSED

+ Response 200 (application/json)
    + Attributes (doorlock)
 
### update doorlock firmware [POST /doorlocks/{id}/update]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Doorlock.

+ Response 200 (application/json)
    + Attributes (doorlock)
 

## Group Events

 
## Events Collection [/events{?start,end,camera,cameras,devices,users,allCameras,type,types,smartDetectTypes,categories,limit,offset,orderDirection,addTimelapseDescriptions,withoutDescriptions,showDeleted}]
 
### List All Events [GET]

+ Parameters
    + start: `1464299823082` (required, number) - Filter out events < start (unix timestamp)
    + end: `1464299940863` (required, number) - Filter out events > end (unix timestamp)

    + camera: `C123` (optional, string) - Filter events by camera
    + cameras: `[C123, C456]` (optional, array) - Filter events by a list of camera IDs
    + devices: `[63187c760009a00387000951]` (optional, array) - Filter events by a list of device IDs
    + users: `[632b1c44006f6e038700040c]` (optional, array) - Filter events by a list of user IDs
    + allCameras: `false` (optional, boolean) - Whether to send events for all cameras (including unadopted)

    + type: `motion` (optional, string) - Filter events by type
    + types: `[motion, ring]` (optional, array) - Filter events by a list of event types
    + smartDetectTypes: `['person']` (optional, array) - Filter events by a list of detected object types
    + categories: `['critical']` (optional, array) - Whether to tag category onto events

    + limit: `50` (optional, number) - Maximum number of events to return
    + offset: `100` (optional, number) - Number of events to skip (e.g. (page number - 1) * number of events per page)
    + orderDirection: `ASC|DESC` (optional, string) - order direction of events
    + addTimelapseDescriptions: `false` (optional, boolean) - Whether to augment events with timelapse descriptions.
    + withoutDescriptions: `false` (optional, boolean) - Whether to skip generating description field.
    + showDeleted: `false` (optional, boolean) - Whether to show soft-deleted events

+ Response 200 (application/json)
    + Attributes (events)
        + category: string
 
### Event [/events/{id}]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Motion Event.
 
### Get Event [GET]

+ Response 200 (application/json)
    + Attributes (event)
 
### Get Event Heatmap [/events/{id}/heatmap]

+ Response 200 (image/png)
 
### Get an animated thumbnail [GET /events/{id}/animated-thumbnail{?w,h,start,end,speedup,keyFrameOnly}]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Motion Event.
    + w: `480` (optional, number) - Width
    + h: `180` (optional, number) - Height
    + start: `1464299823082` (optional, number) - Override start time (unix timestamp)
    + end: `1464299940863` (optional, number) - Override end time (unix timestamp)
    + speedup: `1` (optional, number) - Speedup factor. 1: normal speed. [0..1]: slow down. [1..]: speed up.
    + keyFrameOnly: `false` (optional, boolean) - true - only key frames are considered, false - all frames are considered.

+ Response 200 (image/gif)
 
### Get Event Thumbnail [GET /events/{id}/thumbnail{?w,h,isFullfov}]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the event
    + w: `480` (optional, number) - Width
    + h: `180` (optional, number) - Height
    + isFullfov: `false` (optional, false) - Filter fullfov or cropped thumbnail

+ Response 200 (image/jpeg)
 
### Get Smart Detection Track Information [GET /events/{id}/smartDetectTrack]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the event

+ Response 200 (application/json)
    + Attributes (smartDetectTrack)
 
### Create an access action event [POST /events/access/action]
*Access Application Only\**

+ Response 200 (application/json)
    + Attributes
        + success (boolean) - If create was successful
 

## Group Groups

Retrieve, update and add new groups.
 
## Groups Collection [/groups]
 
### List All Groups [GET]

+ Response 200 (application/json)
    + Attributes (groups)
 
### Create Group [POST]

+ Request (application/json)
    + Attributes
        + name (required, string) - Name of custom group
        + permissions (required, array) - List of permissions for custom group

+ Response 200 (application/json)
    + Attributes (user)
 
### Group [/groups/{id}]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Group.
 
### Get a Group [GET]

+ Response 200 (application/json)
    + Attributes (group)
 
### Update a Group [PATCH]

+ Request (application/json)
    + Attributes
        + name (required, string) - Name of group
        + permissions (required, array) - List of permissions for group

+ Response 200 (application/json)
    + Attributes (group)
 
### Delete a Group [DELETE]

+ Response 200 (application/json)
    + Attributes (group)
 

## Group Heatmaps

DEPRECATED! Please use /events API instead.
 
### Get Heatmap [GET /heatmaps/{id}{?w,h}]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Heatmap.

+ Response 200 (image/png)
 

## Group Lights
 
## Lights Collection [/lights]
 
### List All Lights [GET]

+ Response 200 (application/json)
    + Attributes (lights)
 
### Light [/lights/{id}]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the light.
 
### Get a Light [GET]

+ Response 200 (application/json)
    + Attributes (light)
 
### Update a Light [PATCH]

+ Request (application/json)
    + Attributes (light)

+ Response 200 (application/json)
    + Attributes (light)
 
### Unadopt a Light [POST /lights/{id}/unadopt]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Light.

+ Response 200 (application/json)
    + Attributes (light)
 
### Reboot a Light [POST /lights/{id}/reboot]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Light.

+ Response 200 (application/json)
    + Attributes (light)
 
### Delete a Light [DELETE]

+ Response 200 (application/json)
    + Attributes
        + success (boolean) - If the light was successfully deleted
 
### Locate a Light [POST /lights/{id}/locate]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Light.

+ Response 200 (application/json)
    + Attributes (light)
 
### update light firmware [POST /lights/{id}/update]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Light.

+ Response 200 (application/json)
    + Attributes (light)
 
### Readopt a Light [POST /lights/{id}/readopt{?reset}]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the light.
    + reset: `false` (optional, boolean) - Reset the light history data before readopting. (default: false)

+ Response 200 (application/json)
    + Attributes (light)
 

## Group LiveViews

Retrieve, update and add new live views.
 
## Live Views Collection [/liveviews]
 
### List All Live Views [GET]

+ Response 200 (application/json)
    + Attributes (liveviews)
 
### Create Live View [POST]

+ Response 200 (application/json)
    + Attributes (liveview)
 
### Live View [/liveviews/{id}]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the live view.
 
### Get a Live View [GET]

+ Response 200 (application/json)
    + Attributes (liveview)
 
### Update a Live View [PATCH]

+ Request (application/json)
    + Attributes (liveview)

+ Response 200 (application/json)
    + Attributes (liveview)
 
### Delete a Live View [DELETE]

+ Response 200 (application/json)
    + Attributes (liveview)
 

## Group Motion Events

DEPRECATED! Please use /events API instead.
 
### List All Motion Events [GET /motion-events{?end,start,camera,cameras}]

+ Parameters
    + start: `1464299823082` (required, number) - Filter out events < start (unix timestamp)
    + end: `1464299940863` (required, number) - Filter out events > end (unix timestamp)
    + camera: `C123` (optional, string) - Filter events by camera
    + cameras: `[C123, C456]` (optional, array) - Filter events by a list of camera IDs

+ Response 200 (application/json)
    + Attributes (events)
 
### Motion Event [/motion-events/{id}]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Motion Event.
 
### Get Motion Event [GET]

+ Response 200 (application/json)
    + Attributes (event)
 

## Group NVR

Retrieve, update and perform actions on NVR.
 
### NVR [/nvr]
 
### Get NVR record [GET]

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (nvr)
 
### Update NVR record [PATCH]

+ Request (application/json)
    + Attributes (nvr)

+ Response 200 (application/json)
    + Attributes (nvr)
 
### Reboot [/nvr/reboot]
 
### Reboot NVR [POST]

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes
        + success (boolean) - If reboot was successful
 
### Reset [/nvr/reset]
 
### Reset NVR [POST]

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes
        + success (boolean) - If reset was successful
 
### Support File [/nvr/support-file]
 
### Get Support File [GET]

+ Request (application/json)

+ Response 200 (application/zip)
 
### Time [/nvr/time]
 
### Get NVR time [GET]

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes
        + time (number) - Number of milliseconds elapsed on the NVR since the UNIX epoch
 
### Set NVR time [PATCH]

+ Request (application/json)
     + Attributes
         + time: 1526940027324 (required, number) - Number of milliseconds elapsed on the client since the UNIX epoch

+ Response 200 (application/json)
    + Attributes
        + success (boolean) - If setting time was successful
 
### Device Password [/nvr/device-password]
 
### Get device password [GET]

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes
        + devicePassword (string) - System-wide password for accessing all managed devices
 
### Update the NVR's device password [PATCH]

+ Request (application/json)
     + Attributes
         + devicePassword: 'mM93aHspzSp0wtj50c3c' (required, string) - New system-wide password for accessing all managed devices

+ Response 200 (application/json)
    + Attributes
        + success (boolean) - If updating the NVR's device password/recovery code, and all managed device passwords, was successful
 
### NVR Stacks [POST /nvr-stacks/adopt]

+ Request (application/json)
    + Attributes
        + mac: `24A43C3DFEB9` (required, string) - The target member NVR mac

+ Response 200 (application/json)
    + Attributes (nvr)
 
### NVR Un-Stack [POST /nvr-stacks/unadopt]

+ Request (application/json)
    + Attributes
        + mac: `24A43C3DFEB9` (required, string) - The target member NVR mac

+ Response 200 (application/json)
    + Attributes
        success (boolean) - If unadopt nvr was executed successfully
 

### Get counts of face groups [GET /recognition/face/groups/counts{?start,end}]

+ Parameters
    + start: 1703497265560 (optional, number) - Detect at range start.
    + end: 1703497265560 (optional, number) - Detect at range end.

+ Response 200 (application/json)
    + Attributes (object)
        + totalCount (number) - counts of face groups
        + nameNotNullCount (number) - count of face groups with name
        + nameIsNullCount (number) - count of face groups without name
        + notificationEnabledCount (number) - count of face groups with notification
 
### Get counts of face groups [GET /recognition/face/groups/counts{?ids,hasName,isInterested,names,tags,orderBy,orderDirection,start,end,pageSize,page}]

+ Parameters
    + ids: `[63187c760009a00387000951]` (optional, array) - Filter face groups by ids
    + hasName: true (optional, boolean) - Filter face groups with name
    + isInterested: true (optional, boolean) - Filter face groups with name
    + names: `[name1, name2]` (optional, array) - Filter face groups by names
    + tags: `[tag1, tag2]` (optional, array) - Filter face groups by tags
    + orderBy: `lastDetectedAt` (optional, lastDetectedAt | name | detectionsCount) - Order by
    + orderDirection: `ASC|DESC` (optional, string) - Order direction
    + start: 1703497265560 (optional, number) - Detect at range start.
    + end: 1703497265560 (optional, number) - Detect at range end.
    + pageSize: 1703497265560 (optional, number) - Detect at range end.
        + Default 50
    + page: 1703497265560 (optional, number) - Detect at range end.
        + Default 1

+ Response 200 (application/json)
    + Attributes (object)
        + groups (array[object])
           + (object)
              + id: `6531f65b03baf201f6000424` (string)
              + name: `andy` (optional, string)
              + type: `face` (string)
              + imagePath: `/recognition/face/groups/6531f65b03baf201f6000424/image?t=1706595287657` (string)
              + detectionsCount: 3 (number)
              + firstDetectedAt: 1697773136286 (optional, number)
              + lastDetectedAt: 1697773136286 (optional, number)
              + createdAt: 1697773147954 (number)
              + isNotificationEnabled: false (boolean)
              + tags: `["boss"]` (array)
              + description: `UI` (optional, string)
        + links (object) - counts of face groups
            + prev: `/recognition/face/groups?pageSize=1&page=2&orderBy=lastDetectedAt&orderDirection=asc` (optional, string) - link to previous page
            + next: `/recognition/face/groups?pageSize=1&page=2&orderBy=lastDetectedAt&orderDirection=asc` (optional, string) - link to next page
 
### Get detections of face groups [GET /recognition/face/groups/{groupId}/detections{?cameras,start,end,pageSize,page}]

+ Parameters
    + cameras: `[63187c760009a00387000951]` (optional, array) - Filter face groups by cameras
    + start: 1703497265560 (optional, number) - Detect at range start.
    + end: 1703497265560 (optional, number) - Detect at range end.
    + pageSize: 1703497265560 (optional, number) - Detect at range end.
        + Default 50
    + page: 1703497265560 (optional, number) - Detect at range end.
        + Default 1

+ Response 200 (application/json)
    + Attributes (object)
        + detections (array[object])
           + (object)
              + id: `6531f65b03baf201f6000424` (string)
              + eventId: `6531f65b03baf201f6000424` (string)
              + thumbnailId: `6531f65b03baf201f6000424` (string)
              + cameraId: `6531f65b03baf201f6000424` (string)
              + groupId: `6531f65b03baf201f6000424` (string)
              + detectedAt: 1697773136286 (number)
        + links (object) - counts of face groups
            + prev: `/recognition/face/groups/{groupId}/detections?pageSize=1&page=2` (optional, string) - link to previous page
            + next: `/recognition/face/groups/{groupId}/detections?pageSize=1&page=2` (optional, string) - link to next page
 
### Get image of face groups [GET /recognition/face/groups/{groupId}/image{?w,h}]

+ Parameters
    + w: 300 (optional, number) - width of image.
    + h: 300 (optional, number) - height of image.

+ Response 200 (image/jpeg)
 
### Upload image of face groups [POST /recognition/face/groups/{groupId}/image]

+ Parameters (multipart/form-data)
    + file: image (required, file)

+ Response 200 (application/json)
    + Attributes (object)
       + id: `6531f65b03baf201f6000424` (string)
       + name: `andy` (optional, string)
       + type: `face` (string)
       + imagePath: `/recognition/face/groups/6531f65b03baf201f6000424/image?hash=8409adb71f008c93b381fe48fceda4f9` (string)
       + detectionsCount: `3` (number)
       + firstDetectedAt: `1697773136286` (optional, number)
       + lastDetectedAt: `1697773136286` (optional, number)
       + createdAt: `1697773147954` (number)
       + isNotificationEnabled: `false` (boolean)
       + tags: `["boss"]` (array)
       + description: `UI` (optional, string)
 
### Delete face groups [DELETE /recognition/face/groups/{groupId}]

+ Parameters (application/json)
    + groupId: `65b091bb0342c101f600087a` (string)

+ Response 200 (application/json)
 
### Update face groups [PATCH /recognition/face/groups/{groupId}]

+ Parameters (application/json)
    + name: `andy` (optional, string)
    + isNotificationEnabled: `false` (optional, boolean)
    + tags: `["boss"]` (optional, array)
    + description: `UI` (optional, string)

+ Response 200 (application/json)
    + Attributes (object)
       + id: `6531f65b03baf201f6000424` (string)
       + name: `andy` (optional, string)
       + type: `face` (string)
       + imagePath: `/recognition/face/groups/6531f65b03baf201f6000424/image?t=1706593498357` (string)
       + detectionsCount: `3` (number)
       + firstDetectedAt: `1697773136286` (optional, number)
       + lastDetectedAt: `1697773136286` (optional, number)
       + createdAt: `1697773147954` (number)
       + isNotificationEnabled: `false` (boolean)
       + tags: `["boss"]` (array)
       + description: `UI` (optional, string)
 
### Assign face groups [POST /recognition/face/assign-group]

+ Parameters (application/json)
    + groupId: `6531f65b03baf201f6000424` (string|null) - Set null to remove face from group
    + objectIds: `["6531f65b03baf201f6000424"]` (array)

+ Response 200
 
### Mark face object as misrecognition [POST /recognition/face/misrecognition]

+ Parameters (application/json)
    + objectIds: `["6531f65b03baf201f6000424"]` (array)

+ Response 200
 
### Merge face groups [POST /recognition/face/merge-group]

+ Parameters (multipart/form-data)
    + fromGroupIds: `["6531f65b03baf201f6000424"]` (array)
    + toGroupId: `6531f65b03baf201f6000424` (string)

+ Response 200
 
### Get search candidates [GET /recognition/face/groups/search-candidates{?keyword,limit,caseSensitive}]

+ Parameters (application/json)
    + keyword: `an` (optional, string)
    + limit: `50` (optional, number)
        + Default 20
    + caseSensitive: `false` (optional, boolean)
        + Default false

+ Response 200 (application/json)
    + Attributes (object)
           + names: `["david","covid"]` (array)
           + tags: `["boss"]` (array)
 

## Group Sensors
 
## Sensors Collection [/sensors]
 
### List All Sensors [GET]

+ Response 200 (application/json)
    + Attributes (sensors)
 
### Sensor [/sensors/{id}]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the sensor.
 
### Get a Sensor [GET]

+ Response 200 (application/json)
    + Attributes (sensor)
 
### Update a Sensor [PATCH]

+ Request (application/json)
    + Attributes (sensor)

+ Response 200 (application/json)
    + Attributes (sensor)
 
### Unadopt a Sensor [POST /sensors/{id}/unadopt]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Sensor.

+ Response 200 (application/json)
    + Attributes (sensor)
 
### Delete a Sensor [DELETE]

+ Response 200 (application/json)
    + Attributes
        + success (boolean) - If delete was successful
 
### Reboot a Sensor [POST /sensors/{id}/reboot]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Sensor.

+ Response 200 (application/json)
    + Attributes (sensor)
 
### Locate a Sensor [POST /sensors/{id}/locate]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Sensor.

+ Response 200 (application/json)
    + Attributes (sensor)
 
### Clear Tamper flag [POST /sensors/{id}/clear-tamper-flag]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Sensor.

+ Response 200 (application/json)
    + Attributes (sensor)
 
### update sensor firmware [POST /sensors/{id}/update]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Sensor.

+ Response 200 (application/json)
    + Attributes (sensor)
 
### Readopt a Sensor [POST /sensors/{id}/readopt{?reset}]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the chime.
    + reset: `false` (optional, boolean) - Reset the sensor history data before readopting. (default: false)

+ Response 200 (application/json)
    + Attributes (chime)
 

## Group Setup

Setup APIs.
 
### Setup NVR [POST /setup]

+ Request (application/json)
    + Attributes
        + name: `Home` (required, string) - Name of the Nvr
        + timezone: `America/Los_Angeles` (required, string) - Timezone of the Nvr
        + username: `tim123` (required, string) - Local username of the owner user
        + password: `pa$$word` (required, string) - Local password of the owner user
        + time: 1526940027324 (optional, number) - Number of milliseconds elapsed on the client since the UNIX epoch
        + adoptionKey: 123 (optional, string) - Adoption key for the NVR.
        + ubicAuth: `JqGv7Xk...` (optional, string) - Value of UBIC_AUTH cookie obtained from UBNT SSO
        + syncSso: `true` (optional, boolean) - Whether the user wants their local account to be synced with UBNT SSO
        + token: `954688` (optional, string) - 6-digit token for SSO accounts that have 2fa enabled
        + disableAudio (optional, boolean) - Whether audio recording is disabled globally

+ Response 200 (application/json)
    + Attributes (nvr)
 
### Setup Status [POST /setup/status]

Returns 200 with an empty gif if NVR is not setup, otherwise 410 if NVR is already setup.

+ Response 200 (image/gif)
+ Response 410 (text/plain)
 

## Group Statistics

Retrieve Statistics.
 
### Get statistics of cameras [GET /statistics/audiolevels{?groupId,start,end,period}]
+ Parameters
    + start: `1234567755` (required, number) - start time of the statistics
    + end: `1236567755` (required, number) - end time of the statistics
    + period: `300000` (required, string) - period time of each column

+ Response 200 (application/json)
    + Attributes(object)
        + cameraId(object):
            + audioLevels: `[0, 0, 20, 0]`
 
### Get statistics of cameras [GET /statistics/detections{?groupId,start,end,period}]
+ Parameters
    + start: `1234567755` (required, number) - start time of the statistics
    + end: `1236567755` (required, number) - end time of the statistics
    + period: `300000` (required, string) - period time of each column

+ Response 200 (application/json)
    + Attributes(object)
        + cameraId(object):
            + detectionLength: `[1234, 0, 3000]`
            + motions: `[2, 0, 3]`
            + rings: `[2, 0, 3]`
            + lineCrossings: `[2, 0, 3]`
            + smarts: `[{
                'person': 10,
                'vehicle': 1
              }]`
 
### Get statistics of events for last n hours [GET /statistics/hours/{hours}]
+ Parameters
    + hours: `24` (required, number) - create stats of last n hours

+ Response 200 (application/json)
    + Attributes(object) - Any attribute type will be omitted, if count = 0 (whole "smart" or "line" will be missing, if there are no events)
        + ring: 1
        + motion: 2
        + sensorMotion: 2
        + sensorOpened: 2
        + sensorClosed: 2
        + sensorAlarm: 2
        + sensorExtremeValues: 2
        + sensorWaterLeak: 2
        + sensorBatteryLow: 2
        + lightMotion: 3
        + doorlockOpened: 4
        + doorlockClosed: 4
        + doorlockBatteryLow: 4
        + smart
            + person: 5
            + vehicle: 5
            + face: 5
            + package: 5
        + line
            + person: 6
            + vehicle: 6
 

## Retrieve livestream tcp bridge params [/tcp/livestream{?requestId,camera,channel,type,progressive,allowPartialGOP,fragmentDurationMillis,rebaseTimestampsToZero}]
 
## Retrieve sharedStream tcp bridge params [/tcp/sharedStream{?requestId,camera,channel,type,progressive,allowPartialGOP,fragmentDurationMillis,rebaseTimestampsToZero}]
 

## Group Thumbnails

DEPRECATED! Please use /events API instead.
 
### Get Thumbnail [GET /thumbnails/{id}{?w,h}]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Thumbnail.
    + w: `480` (optional, number) - Width
    + h: `180` (optional, number) - Height

+ Response 200 (image/jpeg)
 

## Group timeline

Retrieve, update and add new live views.
 
## Timeline [/timeline]

Get the status of video partitions and events

### Get the status of timelapse data [GET /video/timelapse/status{?cameras,types,start,end}]

+ Parameters
    + cameras (optional, array) - List of camera IDs to get the status for or 'all' to get the status for all accessible cameras.
    + types (required, string) - Comma separated list of marker types or '*' to get all. (cameraEvents.*,nvrEvents.offline,video)
    + start: `1464299823082` (required, number) - Unix timestamp of start time
    + end: `1464299940863` (required, number) - Unix timestamp of end time

+ Response 200 (application/json)
   + Attributes
     + video (array) - A list of "video" markers (periods with video)
     + event (array) - A list of "event" markers
 

### Update firmware for devices list [POST /ucore/devices/update]

+ Request (application/json)
    + Attributes
        + devices (array): example: ["ED1FDA861C6D", "8CD039D12E3E", "48E9357038D8"]

+ Response 200 (application/json)
    + Attributes
       + success (array[string])
       + errors (array)
           + (object)
               + code (string)
               + message (string)
               + device (string)
 
### Update firmware for devices list [POST /ucore/devices/update/all]

+ Response 200 (application/json)
    + Attributes
       + success (array[string])
       + errors (array)
           + (object)
               + code (string)
               + message (string)
               + device (string)
 
### Restart list of devices [POST /ucore/devices/restart]

+ Request (application/json)
    + Attributes
        + devices (array): example: ["ED1FDA861C6D", "8CD039D12E3E", "48E9357038D8"]

+ Response 200 (application/json)
    + Attributes
       + success (array[string])
       + errors (array)
           + (object)
               + code (string)
               + message (string)
               + device (string)
 

## Group Users

Retrieve, update and add new users.
 
## Users Collection [/users]
 
### List All Users [GET]

+ Response 200 (application/json)
    + Attributes (users)
 
### User [/users/{id}]
You can use an `id` of `self` for the currently logged in user.

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the User.
 
### Get a User [GET]

+ Response 200 (application/json)
    + Attributes (user)
 
### Update a User [PATCH]

+ Request (application/json)
    + Attributes (user)

+ Response 200 (application/json)
    + Attributes (user)
 
### Create an API Key [POST /users/{id}/api-key]

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes
        + apiKey (string) - The API key for the user.
 
### Retrieve an API Key [GET /users/{id}/api-key]

+ Response 200 (application/json)
    + Attributes
        + apiKey (string) - The API key for the user.
 
### Delete an API Key [DELETE /users/{id}/api-key]

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes
        + success (boolean) - If the API key was successfully deleted
 
### Create an alert rule [POST /users/{id}/alert-rule]

Create an alert rule for cameras, controller, or users.

+ Request (application/json)
    + Attributes (alertRule)

+ Response 200 (application/json)
    + Attributes (alertRule)
 
### Create a custom alert rule for all Doorbells [POST /users/{id}/alert-rule/doorbell-rings]

+ Response 200 (application/json)
    + Attributes (alertRule)
 
### Delete an alert rule [DELETE /users/{id}/alert-rule/{alertRuleId}]

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes
        + success (boolean) - If the alert rule was successfully deleted
 
### Update an alert rule [PATCH /users/{id}/alert-rule/{alertRuleId}]

+ Request (application/json)
    + Attributes (alertRule)

+ Response 200 (application/json)
    + Attributes (alertRule)
 
### Retrieve security alerts [GET /users/{id}/notificationsV2]

+ Response 200 (application/json)
    + Attributes (notificationsV2)
 
### Update a security alerts for a User [PATCH /users/{id}/notificationsV2]

+ Request (application/json)
    + Attributes (notificationsV2)

+ Response 200 (application/json)
    + Attributes (notificationsV2)
 

## Group Video

All video-related APIs for live and playback.
 
## Video
 
## Live [/video/live]
Returns an alias you can use to open a livestream data channel

### Get Alias [GET /video/live{?camera,channel,lens}]

+ Parameters
    + camera: 564b882cca5fcb5c0670f5b9 (required, string) - Camera ID.
    + channel (optional, number) - Channel ID.
        + Default `1`
        + Members
          + `0`
          + `1`
          + `2`
    + lens: 2 (optional, string) - Lens index, if there are multiple cameras in the device.

+ Response 200 (application/json)

    + Attributes
        + alias: abc123defg (string) - Stream alias
 
## Export [/video/export]
Export video to MP4

### Export Video [GET /video/export{?camera,start,end,channel,lens,filename,mute,type,fps}]

+ Parameters
    + camera: 564b882cca5fcb5c0670f5b9 (required, string) - Camera ID.
    + start: `1464299823082` (required, number) - The mp4 should start at this wall clock time.
    + end: `1464299940863` (required, number) - The mp4 should end at this wall clock time.
    + channel (optional, number) - Channel ID. `0` = High Quality, `2` = Low Quality
        + Default `0`
        + Members
          + `0`
          + `2`
    + lens: 2 (optional, string) - Lens index, if there are multiple cameras in the device.
    + filename: export.mp4 (optional, string) - Filename of the exported file
    + mute (optional, boolean) - Exclude audio from file. `true` if specified.
        + Default `false`
    + type (optional, string) - Is this a realtime (rotating) export or a sped-up (timelapse) export
        + Default `rotating`
        + Members
            + `rotating`
            + `timelapse`
    + fps (optional, number) - Forced frames per second. Defaults to `0` (disabled) when `type` is `rotating`, and `30` when `type` is `timelapse`

+ Response 200 (video/mp4)
 
## Estimate Video Export [/video/export/estimate]
Estimate Video Export to MP4

### Estimate Video Export [GET /video/export/estimate{?camera,start,end,channel,lens,type}]

+ Parameters
    + camera: 564b882cca5fcb5c0670f5b9 (required, string) - Camera ID.
    + start: `1464299823082` (required, number) - The mp4 should start at this wall clock time.
    + end: `1464299940863` (required, number) - The mp4 should end at this wall clock time.
    + channel (optional, number) - Channel ID. `0` = High Quality, `2` = Low Quality
        + Default `0`
        + Members
          + `0`
          + `2`
    + lens: 2 (optional, string) - Lens index, if there are multiple cameras in the device.
    + type (optional, string) - Is this a realtime (rotating) export or a sped-up (timelapse) export
        + Default `rotating`
        + Members
            + `rotating`
            + `timelapse`
+ Response 200 (application/json)
    + Attributes
        + estimatedSize: 2146344676 (number) - Size estimate in bytes
 
## Delete [/video{?camera,start,end,channel,mute}]
Delete a range of video

### Delete Video [DELETE /video{?camera,start,end}]

+ Parameters
    + camera: 564b882cca5fcb5c0670f5b9 (required, string) - Camera ID.
    + start: `1464299823082` (required, number) - The mp4 should start at this wall clock time.
    + end: `1464299940863` (required, number) - The mp4 should end at this wall clock time.

+ Response 200 (application/json)
 
## Playback [/video/playback]
*WebRTC Only\**

Opens a new playback data channel and returns the name of the channel.

### Open a playback channel [GET /video/playback{?camera,channel,lens,motionEvent,start,end,label,format,idrFrequency,mute}]

+ Parameters
    + camera: `564b882cca5fcb5c0670f5b9` (required, string) - Camera ID.
    + channel (optional, number) - Channel ID. `0` = High Quality, `2` = Low Quality
        + Default `0`
        + Members
          + `0`
          + `2`
    + lens: 2 (optional, string) - Lens index, if there are multiple cameras in the device.
    + motionEvent: `564b882cca5fcb5c0670f5b9` (optional, string) - Motion Event ID
    + start: `1464299823082` (optional, number) - Unix timestamp of start time
    + end: `1464299940863` (optional, number) - Unix timestamp of end time
    + label (optional, string) - Label/name to use for the WebRTC data channel
    + format (optional, string) - Video format to use
        + Default: `UBV`
        + Members
          + `UBV`
          + `FMP4`
    + idrFrequency (optional, number) - If positive, only serve every `N` IDR. If negative, only serve an IDR every `N` ms.
      If this is specified, it will only serve IDRs.
        + Default: `0`
    + mute (optional, boolean) - Mute audio. `true` if specified
        + Default: `false`

+ Response 200 (application/json)
    + Attributes
        + channelName: ABCD:0:123 (string) - The name of the channel which will be opened to serve the video.
 
## Timelapse [/video/timelapse]
*WebRTC Only\**

Opens a new timelapse data channel and returns the name of the channel.

### Open a timelapse channel [GET /video/timelapse{?camera,start,end,label,channel,lens,format,reverse,withIdrs}]

+ Parameters
    + camera: `564b882cca5fcb5c0670f5b9` (required, string) - Camera ID.
    + start: `1464299823082` (optional, number) - Unix timestamp of start time
    + end: `1464299940863` (optional, number) - Unix timestamp of end time
    + label (optional, string) - Label/name to use for the WebRTC data channel
    + channel (optional, number) - Channel ID. `0` = High Quality, `2` = Low Quality
        + Default `0`
        + Members
          + `0`
          + `2`
    + lens: 2 (optional, string) - Lens index, if there are multiple cameras in the device.
    + format (optional, string) - Video format to use
        + Default: `UBV`
        + Members
          + `UBV`
          + `FMP4`
    + reverse (optional, boolean) - Serve content in reverse. `true` if specified
        + Default: `false`
    + withIdrs (optional, boolean) - Fill time with IDRs if content is not yet transcoded. `true` if specified
        + Default: `false`

+ Response 200 (application/json)
    + Attributes
        + channelName: ABCD:0:123 (string) - The name of the channel which will be opened to serve the video.
 

## Group Viewers
 
## Viewers Collection [/viewers]
 
### List All Viewers [GET]

+ Response 200 (application/json)
    + Attributes (viewers)
 
### Viewer [/viewers/{id}]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the viewer.
 
### Get a Viewer [GET]

+ Response 200 (application/json)
    + Attributes (viewer)
 
### Update a Viewer [PATCH]

+ Request (application/json)
    + Attributes (viewer)

+ Response 200 (application/json)
    + Attributes (viewer)
 
### Unadopt a Viewer [POST /viewers/{id}/unadopt]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Viewer.

+ Response 200 (application/json)
   + Attributes (viewer)
 
### Delete a Viewer [DELETE]

+ Response 200 (application/json)
    + Attributes (viewer)
 
### Reboot a Viewer [POST /viewers/{id}/reboot]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Viewer.

+ Response 200 (application/json)
   + Attributes (viewer)
 
### update viewer firmware [POST /viewers/{id}/update]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the Viewer.

+ Response 200 (application/json)
    + Attributes (viewer)
 
### Readopt a Viewer [POST /viewers/{id}/readopt{?reset}]

+ Parameters
    + id: 564b882cca5fcb5c0670f5b9 (required, string) - ID of the viewer.
    + reset: `false` (optional, boolean) - Reset the viewer history data before readopting. (default: false)

+ Response 200 (application/json)
    + Attributes (viewer)
 

## Group WebRTC
 
### Send a SDP Offer [POST /webrtc/sdp]

+ Request (application/json)
    + Attributes
        + offer: `v=0\no=- 1232 2 IN IP4 127.0.0.1...` (required, string) - SDP Offer
        + stunHost: `stun:stun.a.com:19302` (optional, string) - STUN Host to use for the answer
        + turnHost: `turn:turn.a.com:1234`  (optional, string) - TURN Host to use for the answer
        + turnUsername: `abcd` (optional, string) - Username to use with the TURN Host
        + turnPassword: `efg123` (optional, string) - Password to use with the TURN Host
        + useTrickle (optional, boolean) - Trickle ICE candidates (Deprecated!)
            + Default: `false`

+ Response 200 (application/json)
    + Attributes
        + answer: `v=0\no=- 1232 2 IN IP4 127.0.0.1...` (string) - The SDP answer
 
### Send an EMS SDP Offer [POST /webrtc/video/sdp]

+ Request (application/json)
    + Attributes
        + offer: `v=0\no=- 1232 2 IN IP4 127.0.0.1...` (required, string) - SDP Offer
        + stunHost: `stun:stun.a.com:19302` (optional, string) - STUN Host to use for the answer
        + turnHost: `turn:turn.a.com:1234`  (optional, string) - TURN Host to use for the answer
        + turnUsername: `abcd` (optional, string) - Username to use with the TURN Host
        + turnPassword: `efg123` (optional, string) - Password to use with the TURN Host
        + useTrickle (optional, boolean) - Trickle ICE candidates (Deprecated!)
            + Default: `false`

+ Response 200 (application/json)
    + Attributes
        + answer: `v=0\no=- 1232 2 IN IP4 127.0.0.1...` (string) - The SDP answer
 

## Group WS

 
### Retrieve livestream websocket url [GET /ws/livestream{?camera,lens,channel,type,progressive,allowPartialGOP,fragmentDurationMillis,rebaseTimestampsToZero,requestId}]

+ Parameters
    + camera: `C123` (required, string) - Filter events by camera
    + lens: `2` (optional, string) - Lens index, if there are multiple cameras in the device
    + channel: `0` (required, number) - Video channel
    + type: `ubv` (optional, string) - Video type
    + progressive: `true` (optional, boolean) - Is progressive enabled
    + allowPartialGOP: `true` (optional, boolean) - Allow partial GOP
    + fragmentDurationMillis: `100` (optional, number) - Fragment duration in ms
    + rebaseTimestampsToZero: `true` (optional, boolean) - Should rebase timestamps to zero
    + requestId: `ubnt1234` (required, string) - Unique identifier of the request session (video metric use)

+ Response 200 (application/json)
    + Attributes
        + url (string) - websocket url where to receive stream for this request

 
### Receive websocket where stream will be provided [GET /ws/playback{?camera,lens,start,channel,format}]

+ Parameters
    + camera: `C123` (required, string) - Filter events by camera
    + lens: `2` (optional, string) - Lens index, if there are multiple cameras in the device
    + start: `1464299823082` (required, number) - Start of playback (unix timestamp)
    + channel: `0` (optional, number) - Video channel
    + format: `FMP4` (optional, string) - Video format

+ Response 200 (application/json)
    + Attributes
        + url (string) - websocket url where to receive stream for this request

 
### Receive websocket where stream will be provided [GET /ws/talkback{?camera}]

+ Parameters
    + camera: `C123` (required, string) - Filter events by camera

+ Response 200 (application/json)
    + Attributes
        + url (string) - websocket url where to receive stream for this request

 
### Receive websocket where stream will be provided [GET /ws/timelapse{?camera,lens,channel,format,start,end,live}]

+ Parameters
    + camera: `C123` (required, string) - Filter events by camera
    + lens: `2` (optional, string) - Lens index, if there are multiple cameras in the device
    + channel: `0` (required, number) - Video channel
    + format: `FMP4` (required, string) - Video format
    + start: `1464299823082` (optional, number) - Start of playback (unix timestamp)
    + end: `1464299940863` (optional, number) - End of playback (unix timestamp)
    + live: `true` (optional, boolean) - Is live?

+ Response 200 (application/json)
    + Attributes
        + url (string) - websocket url where to receive stream for this request

 
### Receive websocket where stream will be provided [GET /ws/heatmap{?camera,frameDurationMs}]

+ Parameters
    + camera: `C123` (required, string) - Filter events by camera
    + frameDurationMs: `100` (optional, number) - Frame duration in ms

+ Response 200 (application/json)
    + Attributes
        + url (string) - websocket url where to receive stream for this request

 
### Receive websocket where speedtest stream will be provided [GET /ws/speedtest]

+ Response 200 (application/json)
 
### Receive websocket where stream will be provided [GET /ws/sharedStream{?camera}]

+ Parameters
    + camera: `C123` (required, string) - camera id

+ Response 200 (application/json)
    + Attributes
        + url (string) - websocket url where to receive stream for this request

 
### Receive websocket where stream will be provided [GET /ws/liveDetectTrack{?camera}]

+ Parameters
    + camera: `C123` (required, string) - camera id

+ Response 200 (application/json)
    + Attributes
        + url (string) - websocket url where to receive stream for this request

 

# Data Structures

## deviceFeatureFlags (object)

+ hasWifi: `false` (boolean, default) - Whether the device has the wifi.
+ hasHttpsClientOTA: `false` (boolean, default) - Whether the device supports HTTPS client for OTA firmware updates.

## `deviceFeatureFlagss` (array[`deviceFeatureFlags`])

## backup (object)

+ id: `5be5fbde01331d19da0003e9`(string) - Primary key.
+ type: `manual` (enum[string], default) - The context in which the backup was created.
  + `manual`
  + `auto`
  + `imported`
+ timestamp: `1534803977545` (number) - Timestamp of when the backup was created.
+ version: `1.10.0-alpha.1` (string) - Version of UFP at the time of backup.
+ checksum (string) - The md5 checksum of the backup file

## `backups` (array[`backup`])

## backupFile (object)

+ id: `5be5fbde01331d19da0003e9`(string) - Primary key.
+ path: `unifi_protect_backup.v1.10.0-beta.7.201905131605279.zip` (string) - The path to the file on the fs.
+ backup (string) - id of backup

## `backupFiles` (array[`backupFile`])

## bridge (object)

+ id: `5be5fbde01331d19da0003e9`(string) - Primary key.
+ mac: `24A43C3DFEB9` (string) - The primary MAC address of the device.
+ host: `null` (string, default) - The primary IP address of the device.
+ connectionHost: `null` (string, default) - The ip or hostname the device uses to connect.
+ type: `null` (string, default) - The device model name.
+ name: `null` (string, default) - The name of the device.
+ upSince (number) - Unix timestamp of when the device started up.
+ uptime (number) - device uptime in second.
+ lastSeen (number) - Unix timestamp of when the device was last connected.
+ connectedSince (number) - Unix timestamp of when the device connected to the NVR.
+ state: `DISCONNECTED` (enum[string], default) - Connection state of the device.
  + `CONNECTED`
  + `CONNECTING`
  + `DISCONNECTED`
+ lastDisconnect (number) - Unix timestamp of the last time the device disconnected.
+ hardwareRevision: `null` (string, default) - Hardware revision of the device
+ firmwareVersion: `null` (string, default) - The version of firmware that is installed on the device.
+ latestFirmwareVersion: `null` (string, default) - The latest firmware version of the device.
+ firmwareBuild: `null` (string, default) - The build # of the firmware that is installed.
+ isUpdating: `false` (boolean, default) - Whether the device is currently updating
+ isDownloadingFW: `false` (boolean, default) - Whether the device is currently downloading a FW for an upgrade
+ fwUpdateState: `null` (enum[string], default) - The device FW update state.
  + `upToDate`
  + `preparing`
  + `updating`
  + `downloading`
  + `failed`
  + `queueing`
  + `updateAvailable`
+ isAdopting: `false` (boolean, default) - Whether or not the device is currently being adopted.
+ isRestoring: `false` (boolean, default) - Whether or not the device is currently being restored.
+ isAdopted: `false` (boolean, default) - Whether or not the device is adopted.
+ isAdoptedByOther: `false` (boolean, default) - Whether or not the device is adopted by the other controller.
+ isProvisioned: `false` (boolean, default) - Whether or not the device is provisioned.
+ isRebooting: `false` (boolean, default) - Whether the device is currently rebooting
+ isSshEnabled: `false` (boolean, default) - Whether or not SSH is enabled
+ canAdopt: `false` (boolean, default) - Whether or not the device can be adopted.
+ isAttemptingToConnect: `false` (boolean, default) - Whether the device is attempting to connect to the controller
+ wiredConnectionState (wiredConnectionState) - Wired connection state of the device.
+ isConnected (boolean) - Whether the device IPC is connected?
+ nvrMac: `24A43C3DFEB9` (string) - The MAC address of the NVR managed this device.
+ guid: `null` (string, default) - Unique id of the device
+ anonymousDeviceId: `null` (string, default) - Persistent unique device identifier.
+ platform (string) - The bridge platform

## `bridges` (array[`bridge`])

## bridgeCandidate (object)

+ id: `null` (string, default) - Bridge candidate ID.
+ signalQuality (number) - Percent representation of Bluetooth signal strength from the Bluetooth device to the bridge candidate.
+ lastSeen (number) - Unix timestamp of when the Bluetooth device was last discovered by the bridge.

## `bridgeCandidates` (array[`bridgeCandidate`])

## audioSettings (object)

+ style: `["nature"]` (array, default) - What audio style camera is using

## `audioSettingss` (array[`audioSettings`])

## camera (object)

+ id: `5be5fbde01331d19da0003e9`(string) - Primary key.
+ isDeleting: `false` (boolean, default) - Whether the camera is currently in the process of being deleted
+ mac: `24A43C3DFEB9` (string) - The primary MAC address of the device.
+ host: `null` (string, default) - The primary IP address of the device.
+ connectionHost: `null` (string, default) - The ip or hostname the device uses to connect.
+ type: `null` (string, default) - The device model name.
+ name: `null` (string, default) - The name of the device.
+ upSince (number) - Unix timestamp of when the device started up.
+ uptime (number) - device uptime in second.
+ lastSeen (number) - Unix timestamp of when the device was last connected.
+ connectedSince (number) - Unix timestamp of when the device connected to the NVR.
+ state: `DISCONNECTED` (enum[string], default) - Connection state of the device.
  + `CONNECTED`
  + `CONNECTING`
  + `DISCONNECTED`
+ lastDisconnect (number) - Unix timestamp of the last time the device disconnected.
+ hardwareRevision: `null` (string, default) - Hardware revision of the device
+ firmwareVersion: `null` (string, default) - The version of firmware that is installed on the device.
+ latestFirmwareVersion: `null` (string, default) - The latest firmware version of the device.
+ firmwareBuild: `null` (string, default) - The build # of the firmware that is installed.
+ isUpdating: `false` (boolean, default) - Whether the device is currently updating
+ isDownloadingFW: `false` (boolean, default) - Whether the device is currently downloading a FW for an upgrade
+ fwUpdateState: `null` (enum[string], default) - The device FW update state.
  + `upToDate`
  + `preparing`
  + `updating`
  + `downloading`
  + `failed`
  + `queueing`
  + `updateAvailable`
+ isAdopting: `false` (boolean, default) - Whether or not the device is currently being adopted.
+ isRestoring: `false` (boolean, default) - Whether or not the device is currently being restored.
+ isAdopted: `false` (boolean, default) - Whether or not the device is adopted.
+ isAdoptedByOther: `false` (boolean, default) - Whether or not the device is adopted by the other controller.
+ isProvisioned: `false` (boolean, default) - Whether or not the device is provisioned.
+ isRebooting: `false` (boolean, default) - Whether the device is currently rebooting
+ isSshEnabled: `false` (boolean, default) - Whether or not SSH is enabled
+ canAdopt: `false` (boolean, default) - Whether or not the device can be adopted.
+ isAttemptingToConnect: `false` (boolean, default) - Whether the device is attempting to connect to the controller
+ wiredConnectionState (wiredConnectionState) - Wired connection state of the device.
+ isConnected (boolean) - Whether the device IPC is connected?
+ marketName (string) - The market name of camera.
+ nvrMac: `24A43C3DFEB9` (string) - The MAC address of the NVR managed this device.
+ guid: `null` (string, default) - Unique id of the device
+ anonymousDeviceId: `null` (string, default) - Persistent unique device identifier.
+ lastMotion (number) - Unix timestamp of the last recorded motion.
+ micVolume: `80` (number, default) - Mic volume: a number from 0-100.
+ isMicEnabled: `true` (boolean, default) - Whether or not the microphone on camera is enabled
+ channels (array[channel]) - A list of channels.
+ ispSettings (ispSettings) - Image Signal Processor settings.
+ audioSettings (audioSettings) - Camera audio settings
+ talkbackSettings (talkbackSettings) - Talkback settings.
+ osdSettings (osdSettings) - On Screen Display settings.
+ ledSettings (ledSettings) - LED settings.
+ speakerSettings (speakerSettings) - Speaker settings.
+ recordingSettings (cameraRecordingSettings) - Recording settings for the camera.
+ smartDetectSettings (smartDetectSettings) - Smart detection settings for the camera.
+ recordingSchedulesV2 (array[scheduleRule]) - The recording schedule for this camera
+ motionZones (array[motionZones]) - An array of motion zones.
+ privacyZones (array[privacyZones]) - An array of privacy zones.
+ smartDetectZones (array[smartDetectZones]) - An array of smart detection zones.
+ smartDetectLines (array[smartDetectLines]) - An array of smart detection lines.
+ stats (cameraStats) - Statistics for the camera.
+ isRecording: `false` (boolean, default) - Whether the camera is currently recording
+ isWirelessUplinkEnabled: `true` (boolean, default) - is wireless uplink enabled?
+ isMotionDetected: `false` (boolean, default) - Whether the camera is currently detecting motion
+ isSmartDetected: `false` (boolean, default) - Whether the camera is currently detecting smart motion
+ phyRate (number) - Physical link rate of the camera in Mbps.
+ hdrMode: `false` (boolean, default) - Whether High Dynamic Range is on or off
+ videoMode: `default` (enum[string], default) - Current video mode of the camera
  + `default`
  + `highFps`
  + `homekit`
  + `sport`
  + `slowShutter`
+ featureFlags (featureFlags) - Feature flags of the camera
+ isProbingForWifi: `false` (boolean, default) - Whether the camera is probing for a network over wireless uplink
+ apMac: `80:2a:a8:13:0b:56` (string) - The MAC address of the AP that discovered this camera over wireless uplink
+ apRssi (number) - The received signal strength indication of the AP that discovered this camera over wireless uplink
+ apMgmtIp: `null` (string, default) - The management IP address of the AP that discovered this camera over wireless uplink
+ elementInfo: `SEVMTE8=` (string) - The element information provided by this camera while it was probing for a wireless network
+ chimeDuration: `0` (number, default) - How long your doorbell rings in milliseconds when someone presses the button. (0-10000 ms)
+ isDark: `false` (boolean, default) - Whether the camera is currently in dark scene.
+ lastPrivacyZonePositionId (number) - The last location of the privacy zone ID where the camera was. (PTZ only)
+ lcdMessage (lcdMessage) - LCD message information.
+ lastRing (number) - Unix timestamp of the last time the doorbell ring button was pressed.
+ wifiConnectionState (wifiConnectionState) - Wi-Fi connection state of the device.
+ isLiveHeatmapEnabled: `false` (boolean, default) - Whether the camera is currently live-heatmap enabled or not.
+ eventStats (object) - Event statistics for the camera.
+ videoReconfigurationInProgress: `false` (boolean, default) - Whether video settings, which need EMS stream to reset, are are being updated.
+ lenses (array[lens]) - An array of lenses.
+ voltage (number) - AC voltage.
+ streamSharing (streamSharing) - Camera stream sharing.
+ homekitSettings (homekitSettings) - Homekit settings.
+ useGlobal: `true` (boolean, default) - Whether use global camera settings
+ audioBitrate (number) - The camera audio bitrate.
+ platform (string) - The camera platform.
+ hasSpeaker (boolean) - Whether the camera has a speaker.
+ hasWifi (boolean) - Whether the camera has the wifi.
+ isPoorNetwork: `false` (boolean, default) - Whether the camera is currently in poor network state.
+ stopStreamLevel (enum[number]) - Which level of the camera stream is stopped.
  + `0`
  + `1`
  + `2`
+ canManage (boolean) - Whether the camera can manage? (alias to canAdopt)
+ isManaged (boolean) - Whether the camera is managed? (alias to isAdopted)
+ is4K (boolean) - Whether the camera HQ is 4K resolution.
+ is2K (boolean) - Whether the camera HQ is 2K resolution.
+ isWaterproofCaseAttached: `false` (boolean, default) - Whether the waterproof case is attached.
+ uplinkDevice (object) - Device data camera is connected to.
+ userConfiguredAp: `false` (boolean, default) - Whether the connected AP is user configured
+ hasRecordings: `false` (boolean, default)

## `cameras` (array[`camera`])

## channel (object)

+ id: `0` (number) - The ID of the channel (IDs are only unique per camera).
+ videoId: `video1` (enum[string]) - The videoID of the channel.
  + `video1`
  + `video2`
  + `video3`
  + `video4`
+ name: `High` (enum[string]) - The name of the channel.
  + `Low`
  + `Medium`
  + `High`
  + `Package Camera`
+ enabled: `true` (boolean, default) - Whether or not the channel is enabled.
+ isRtspEnabled: `false` (boolean, default) - Whether or not RTSP relaying is enabled for this channel.
+ rtspAlias: `null` (string, default) - The RTSP alias for this channel.
+ width (number) - The width of the video stream for this channel.
+ height (number) - The height of the video stream for this channel.
+ fps (number) - The FPS to use for this channel.
+ bitrate (number) - The maximum bits per second this channel should use.
+ minBitrate (number) - The minimum allowed bits per second.
+ maxBitrate (number) - The maximum allowed bits per second.
+ minClientAdaptiveBitRate (number) - The minimum allowed bps for this channel (used for adaptive bitrate).
+ minMotionAdaptiveBitRate (number) - The minimum allowed bps for this channel (used for adaptive bitrate).
+ fpsValues: `[1,5,10,15,20,25,30]` (array) - The allowed FPS values for this channel.
+ idrInterval: `5` (number, default) - Number of seconds between IDRs.
+ autoFps: `true` (boolean, default) - Whether or not the auto FPS is enabled.
+ autoBitrate: `true` (boolean, default) - Whether or not the auto bitrate is enabled.

## `channels` (array[`channel`])

## extenders (object)

+ isAttached (boolean) - Whether extender attached
+ hasFlash (boolean) - Whether flash supported
+ hasIR (boolean) - Whether ir supported
+ hasRadar (boolean) - Whether radar supported

## `extenderss` (array[`extenders`])

## featureFlags (object)

+ canAdjustIrLedLevel: `false` (boolean, default) - Whether the camera has adjustable IR
+ canMagicZoom: `false` (boolean, default) - Whether the camera can magic zoom
+ canOpticalZoom: `false` (boolean, default) - Whether the camera can zoom optically
+ canTouchFocus: `false` (boolean, default) - Whether the camera can touch focus
+ hasAccelerometer: `false` (boolean, default) - Whether the camera has an accelerometer
+ hasVerticalFlip: `true` (boolean, default) - Whether the camera support vertical flip
+ hasAec: `false` (boolean, default) - Whether the camera has acoustic echo cancellation
+ hasBluetooth: `false` (boolean, default) - Whether the camera has bluetooth
+ hasChime: `false` (boolean, default) - Whether the camera has a mechanical chime
+ hasExternalIr: `false` (boolean, default) - Whether the camera has external IR
+ hasIcrSensitivity: `true` (boolean, default) - Whether the camera has ICR sensitivity
+ hasInfrared: `true` (boolean, default) - Whether the camera has infrared
+ hasLdc: `false` (boolean, default) - Whether the camera has lens distortion correction
+ hasLedIr: `false` (boolean, default) - Whether the camera has LED IR
+ hasLedStatus: `false` (boolean, default) - Whether the camera has LED status
+ hasLineIn: `false` (boolean, default) - Whether the camera has line in
+ hasMic: `false` (boolean, default) - Whether the camera has a microphone
+ hasPrivacyMask: `true` (boolean, default) - Whether the camera supports privacy masking
+ hasRtc: `false` (boolean, default) - Whether the camera has a real-time clock
+ hasSdCard: `false` (boolean, default) - Whether the camera has an SD card
+ hasSpeaker: `false` (boolean, default) - Whether the camera has a speaker
+ hasWifi: `false` (boolean, default) - Whether the camera has wifi
+ hasHdr: `false` (boolean, default) - Whether the camera supports High Dynamic Range mode
+ hasAutoICROnly: `false` (boolean, default) - Whether the camera supports Auto-ICR-Filter-Only mode
+ videoModes: `[]` (array, default) - A list of supported video modes by the camera
+ videoModeMaxFps: `[]` (array, default) - A list of maximal FPS for each supported video mode
+ hasMotionZones: `true` (boolean, default) - Whether the camera supports motion zones
+ hasLcdScreen: `false` (boolean, default) - Whether the camera has a LCD screen
+ mountPositions: `[]` (array, default) - What mount positions do the camera support.
+ smartDetectTypes: `[]` (array, default) - What smart detection object types do the camera support.
+ smartDetectAudioTypes: `[]` (array, default) - What smart detection audio types do the camera support.
+ hasSmartDetect (boolean) - Whether the camera supports smart detect.
+ lensType: `null` (enum[string], default) - Type of the attached lens
  + `none`
  + `360`
  + `wide`
  + `tele`
  + `m43`
+ lensModel: `null` (enum[string], default) - Model of the attached lens
  + `none`
  + `Lens360`
  + `LensTele`
  + `LensWide`
  + `LensProFisheye`
  + `LensProWide`
  + `LensProTele`
  + `LensPro360`
+ motionAlgorithms: `[]` (array, default) - What motion algorithms do the camera support.
+ privacyMaskCapability (privacyMaskCapability) - The capability of privacy masks.
+ focus (focusCapability) - Focus capability of the camera.
+ pan (panCapability) - Pan capability of the camera.
+ tilt (tiltCapability) - Tilt capability of the camera.
+ zoom (zoomCapability) - Zoom capability of the camera.
+ hasSquareEventThumbnail: `false` (boolean, default) - Whether thumbnails are square.
+ hasPackageCamera: `false` (boolean, default) - Device has a secondary package camera.
+ hotplug (hotplugItem) - Hotplugable items
+ audio: `[]` (array, default) - What audio features do the camera support.
+ audioCodecs: `[]` (array, default) - What audio codecs do the camera support.
+ audioStyle (array) - What audio styles does the camera support.
+ isDoorbell: `false` (boolean, default) - Whether camera is a doorbell model
+ isPtz: `false` (boolean, default) - Whether camera is a ptz model
+ hasColorLcdScreen: `false` (boolean, default) - Whether camera support color LCD screen
+ hasLiveviewTracking: `false` (boolean, default) - Whether camera support liveview tracking
+ hasLineCrossing: `false` (boolean, default) - Whether camera support line crossing
+ hasLineCrossingCounting: `false` (boolean, default) - Whether camera support line crossing counting
+ hasFlash: `false` (boolean, default) - Whether camera support internal flash LED

## `featureFlags_coll` (array[`featureFlags`])

## homekitSettings (object)

+ talkbackSettingsActive: `false` (boolean, default) - Whether homekit specific talkback settings have been applied to the camera.
+ streamInProgress: `false` (boolean, default) - Whether homekit video/audio/talkback stream is in progress.
+ microphoneMuted: `false` (boolean, default) - Whether microphone is muted in homekit app
+ speakerMuted: `false` (boolean, default) - Whether speaker is muted in homekit app

## `homekitSettingss` (array[`homekitSettings`])

## hotplugItem (object)

+ audio (boolean) - Whether audio attached, null if not supported
+ video (boolean) - Whether video attached, null if not supported
+ extender (extenders) - extenders items
+ standaloneAdoption: `false` (boolean, default) - Whether camera is supported for adoption without video attached

## `hotplugItems` (array[`hotplugItem`])

## ispSettings (object)

+ aeMode: `auto` (enum[string], default) - Auto Exposure mode.
  + `manual`
  + `auto`
  + `shutter`
  + `flick50`
  + `flick60`
+ irLedMode: `auto` (enum[string], default) - IR LED Mode.
  + `on`
  + `off`
  + `auto`
  + `manual`
  + `autoFilterOnly`
  + `custom`
  + `customFilterOnly`
+ irLedLevel: `255` (number, default) - IR LED Level. (1-255)
+ wdr: `1` (number, default) - Wide Dynamic Range Level.
+ icrSensitivity: `0` (enum[number], default) - ICR sensitivity. (0: Low, 1: Medium, 2: High, 3: Custom)
  + `0`
  + `1`
  + `2`
  + `3`
+ icrSwitchMode: `sensitivity` (enum[string], default) - ICR switch mode.
  + `sensitivity`
  + `lux`
+ icrCustomValue: `2` (number, default) - ICR custom value. (0 - 10, total 11 levels)
+ brightness: `50` (number, default) - Brightness.
+ contrast: `50` (number, default) - Contrast.
+ hue: `50` (number, default) - Hue.
+ saturation: `50` (number, default) - Saturation Level.
+ sharpness: `50` (number, default) - Sharpness Level.
+ denoise: `50` (number, default) - Denoise Level.
+ isColorNightVisionEnabled: `false` (boolean, default) - Is color night vision enabled
+ spotlightDuration: `15` (number, default) - Spotlight duration (in second)
+ isFlippedVertical: `false` (boolean, default) - Flip the image vertically.
+ isFlippedHorizontal: `false` (boolean, default) - Flip the image horizontally.
+ isAutoRotateEnabled: `true` (boolean, default) - Is auto rotate enabled (G3-FLEX only). When true, isFlippedVertical and isFlippedHorizontal are false automatically.
+ isLdcEnabled: `true` (boolean, default) - Is Lens Distortion Correction enabled
+ is3dnrEnabled: `true` (boolean, default) - Is 3DNR Enabled
+ isExternalIrEnabled: `false` (boolean, default) - Is External IR Enabled
+ isAggressiveAntiFlickerEnabled: `false` (boolean, default) - Is Aggressive Anti-Flicker Enabled
+ isPauseMotionEnabled: `false` (boolean, default) - Is pause motion detection on day/night switch enabled
+ dZoomCenterX: `50` (number, default) - dZoomCenterX.
+ dZoomCenterY: `50` (number, default) - dZoomCenterY.
+ dZoomScale: `0` (number, default) - dZoomCenterY.
+ dZoomStreamId: `4` (number, default) - dZoomStreamId.
+ focusMode (enum[string]) - Focus Mode (certain camera models only)
  + `manual`
  + `auto`
  + `ztrig`
  + `touch`
+ focusPosition: `0` (number, default) - Focus Position (only if focusMode is set to manual). UVC Pro Only.
+ touchFocusX (number) - Touch focus center x coordinate
+ touchFocusY (number) - Touch focus center y coordinate
+ zoomPosition: `0` (number, default) - Zoom Level (certain camera models only)
+ mountPosition: `null` (enum[string], default) - Fisheye model (AI-360) mounting position
  + `ceiling`
  + `wall`
  + `desk`
  + `null`
+ hdrMode: `normal` (enum[string], default) - High Dynamic Range mode in ISP setting
  + `normal`
  + `superHdr`

## `ispSettings_coll` (array[`ispSettings`])

## lcdMessage (object)

+ type (enum[string]) - The type of the LCD message.
  + `LEAVE_PACKAGE_AT_DOOR`
  + `DO_NOT_DISTURB`
  + `CUSTOM_MESSAGE`
+ text (string) - The text to display on the LCD screen.
+ resetAt: `1534803977545` (number) - Unix timestamp of when the LCD message should be reset to the default. Set NULL to never reset.

## `lcdMessages` (array[`lcdMessage`])

## ledSettings (object)

+ isEnabled: `true` (boolean, default) - Whether the LED is enabled.
+ blinkRate: `0` (number, default) - How fast the LED blinks (in ms). 0 (min) is solid

## `ledSettings_coll` (array[`ledSettings`])

## lens (object)

+ id: `2` (number, default) - Lens id
+ video (videoStats) - Video statistics for the lens.

## `lenss` (array[`lens`])

## motionZone (object)

+ id (number) - ID of the zone. (start from 1)
+ name: `null` (string, default) - Name of the zone.
+ color: `null` (string, default) - Color of the zone.
+ points: `[[0.25,0.25],[0.75,0.25],[0.75,0.75],[0.25,0.75]]` (array) - An array of arrays of [x, y]
+ sensitivity (number) - Motion sensitivity (0-100).
+ isTriggerLightEnabled: `true` (boolean, default) - Whether the G5 IR extender is enabled.

## `motionZones` (array[`motionZone`])

## osdSettings (object)

+ isNameEnabled: `false` (boolean, default) - Whether to show the name in the OSD.
+ isDateEnabled: `false` (boolean, default) - Whether to show the date in the OSD.
+ isLogoEnabled: `true` (boolean, default) - Whether to show the logo in the bottom right corner.
+ isDebugEnabled: `false` (boolean, default) - Whether debug info is enabled.

## `osdSettings_coll` (array[`osdSettings`])

## privacyMaskCapability (object)

+ maxMasks (number) - The maximal number of privacy masks.
+ rectangleOnly: `false` (boolean, default) - Whether the camera is only supported for rectangular privacy masks.

## `privacyMaskCapabilitys` (array[`privacyMaskCapability`])

## privacyZone (object)

+ id (number) - ID of the zone. (start from 1)
+ name: `null` (string, default) - Name of the zone.
+ color: `null` (string, default) - Color of the zone.
+ points: `[[0.25,0.25],[0.75,0.25],[0.75,0.75],[0.25,0.75]]` (array) - An array of arrays of [x, y]

## `privacyZones` (array[`privacyZone`])

## ptz (object)

+ pan: `0` (number, default) - pan position
+ tilt: `0` (number, default) - tilt position
+ zoom: `0` (number, default) - zoom position

## `ptzs` (array[`ptz`])

## ptzPreset (object)

+ id: `5be5fbde01331d19da0003e9`(string) - Primary key.
+ name: `Preset` (string, default) - Preset name.
+ camera (string) - Which camera this preset belongs to.
+ ptz (ptz) - PTZ position.
+ slot: `0` (number, default) - Which slot this preset belongs to (-1 home preset, >=0 other presets).

## `ptzPresets` (array[`ptzPreset`])

## cameraRecordingSettings (object)

+ prePaddingSecs: `2` (number, default) - How many seconds added before motion detection start.
+ postPaddingSecs: `2` (number, default) - How many seconds added after motion detection end.
+ smartDetectPrePaddingSecs: `2` (number, default) - How many seconds added before smart detection event start.
+ smartDetectPostPaddingSecs: `2` (number, default) - How many seconds added after smart detection event end.
+ minMotionEventTrigger: `1000` (number, default) - Minimum Motion Event Trigger in milliseconds, affect motion detection only.
+ endMotionEventDelay: `3000` (number, default) - End Motion Event Delay in milliseconds, affect motion detection only.
+ suppressIlluminationSurge: `false` (boolean, default) - Suppress Illumination Surge.
+ mode: `always` (enum[string], default) - What mode you want to use for recording.
  + `always`
  + `schedule`
  + `never`
  + `detections`
+ inScheduleMode (enum[string]) - What mode when inside schedule
  + `always`
  + `detections`
+ outScheduleMode (enum[string]) - What mode when outside schedule
  + `always`
  + `detections`
  + `never`
+ geofencing: `off` (enum[string], default) - What mode you want to use for recording.
  + `off`
  + `allAway`
+ retentionDurationMs: `172800000` (number) - Duration in milliseconds to retain videos before staging them for recycling.
+ motionAlgorithm: `enhanced` (enum[string], default) - What motion algorithm you want to use for recording.
  + `stable`
  + `enhanced`
+ enableMotionDetection: `true` (boolean, default) - Enable motion detection
+ useNewMotionAlgorithm (boolean) - Whether camera use experimental motion algorithm

## `cameraRecordingSettingss` (array[`cameraRecordingSettings`])

## smartDetectLine (object)

+ id (number) - ID of the zone. (start from 1)
+ name: `null` (string, default) - Name of the zone.
+ color: `null` (string, default) - Color of the zone.
+ points: `[[0.25,0.25],[0.75,0.25],[0.75,0.75],[0.25,0.75]]` (array) - An array of arrays of [x, y]
+ sensitivity: `50` (number, default) - Smart detection sensitivity (0-100).
+ objectTypes: `[]` (array, default) - A list of object types to detect.
+ isTriggerLightEnabled: `false` (boolean, default) - Whether the G5 IR extender is enabled.
+ direction: `both` (enum[string], default) - Line counting direction
  + `AB`
  + `BA`
  + `both`
+ isTargetCounting: `false` (boolean, default) - Whether target counting
+ plan (smartDetectLinePlans) - A plan for resetting count

## `smartDetectLines` (array[`smartDetectLine`])

## smartDetectLinePlan (object)

+ autoReset: `none` (enum[string], default) - how long will line count be reset
  + `daily`
  + `weekly`
  + `monthly`
  + `none`
+ time (number) - milliseconds for daily and weekly reset
+ weekDay: `null` (enum[string], default) - day for weekly reset
  + `sun`
  + `mon`
  + `tue`
  + `wed`
  + `thu`
  + `fri`
  + `sat`
  + `null`
+ date (number) - date for monthly reset

## `smartDetectLinePlans` (array[`smartDetectLinePlan`])

## smartDetectSettings (object)

+ objectTypes: `[]` (array, default) - What object types do the camera needs to detect.
+ autoTrackingObjectTypes: `[]` (array, default) - What object types do the camera needs to track.
+ audioTypes: `[]` (array, default) - What audio types do the cameras needs to detect

## `smartDetectSettingss` (array[`smartDetectSettings`])

## smartDetectZone (object)

+ id (number) - ID of the zone. (start from 1)
+ name: `null` (string, default) - Name of the zone.
+ color: `null` (string, default) - Color of the zone.
+ points: `[[0.25,0.25],[0.75,0.25],[0.75,0.75],[0.25,0.75]]` (array) - An array of arrays of [x, y]
+ sensitivity: `50` (number, default) - Smart detection sensitivity (0-100).
+ objectTypes: `[]` (array, default) - A list of object types to detect.
+ isTriggerLightEnabled: `true` (boolean, default) - Whether the G5 IR extender is enabled.

## `smartDetectZones` (array[`smartDetectZone`])

## speakerSettings (object)

+ isEnabled: `true` (boolean, default) - Whether or not the speaker on camera is enabled.
+ areSystemSoundsEnabled: `false` (boolean, default) - Whether or not system sounds on camera are enabled.
+ volume: `80` (number, default) - Speaker volume: a number from 0-100.

## `speakerSettings_coll` (array[`speakerSettings`])

## cameraStats (object)

+ rxBytes: `0` (number, default) - rx.
+ txBytes: `0` (number, default) - tx.
+ wifi (wifiStatus) - Wifi network status for the camera.
+ wifiQuality (number) - Wifi signal quality for the device.
+ wifiStrength (number) - Wifi signal strength for the device.
+ video (videoStats) - Video statistics for the camera.
+ storage (cameraStatsStorage) - Storage stats for the camera.

## `cameraStatss` (array[`cameraStats`])

## cameraStatsStorage (object)

+ used (number) - Storage space used by the camera footage, in bytes.
+ rate (number) - Storage fill rate, in B/ms.

## `cameraStatsStorages` (array[`cameraStatsStorage`])

## streamSharing (object)

+ enabled: `false` (boolean, default) - Whether the camera sharing is enabled.
+ token: `null` (string, default) - Connection token.
+ shareLink: `null` (string, default) - External link to view the shared stream.
+ expires (number) - Unix timestamp of shared link expiry.
+ sharedByUserId: `null` (string, default) - Id of user who shared the camera stream.
+ sharedByUser: `null` (string, default) - User who shared the camera stream.
+ maxStreams (number) - Maximum allowed simultaneous streams.

## `streamSharings` (array[`streamSharing`])

## talkbackSettings (object)

+ typeFmt: `aac` (enum[string], default) - Audio format to use.
  + `aac`
  + `vorbis`
+ typeIn: `serverudp` (enum[string], default) - Protocol to use.
  + `serverudp`
+ bindAddr: `0.0.0.0` (string, default) - What address to bind to.
+ bindPort: `7004` (number, default) - What port to bind to.
+ filterAddr: `null` (string, default) - Can be used to restrict sender address.
+ filterPort (number) - Can be used to restrict sender port.
+ channels: `1` (number, default) - Mono (1) or Stereo (2).
+ samplingRate: `22050` (enum[number], default) - Sampling Rate.
  + `8000`
  + `11025`
  + `22050`
  + `44100`
  + `48000`
+ bitsPerSample: `16` (number, default) - Bits per sample.
+ quality: `100` (number, default) - Quality level. Only applicable if using Vorbis. Must match encoder value.
+ url: `A0B1C2D3F4?talkback&ip=192.168.0.111&port=7004` (string) - READ ONLY. URL to use with EMS.

## `talkbackSettings_coll` (array[`talkbackSettings`])

## videoStats (object)

+ recordingStart (number) - Timestamp of earliest recorded video content.
+ recordingEnd (number) - Timestamp of latest recorded video content.
+ recordingStartLQ (number) - Timestamp of earliest recorded video content (low quality)..
+ recordingEndLQ (number) - Timestamp of latest recorded video content (low quality)..
+ timelapseStart (number) - Timestamp of earliest transcoded video content.
+ timelapseEnd (number) - Timestamp of latest transcoded video content.
+ timelapseStartLQ (number) - Timestamp of earliest transcoded video content (low quality).
+ timelapseEndLQ (number) - Timestamp of latest transcoded video content (low quality).

## `videoStatss` (array[`videoStats`])

## wifiStatus (object)

+ channel (number) - wlan frequency channel.
+ frequency (number) - center frequency of wlan channel.
+ linkSpeedMbps (number) - Physical link rate of the camera in Mbps.
+ signalQuality: `50` (number, default) - 0-100 for signal strength.
+ signalStrength: `0` (number, default) - dbm value of wifi signal strength.

## `wifiStatuss` (array[`wifiStatus`])

## degreesRange (object)

+ max (number) - The maximum allowed range.
+ min (number) - The minimum allowed range.
+ step (number) - The minimum step.

## `degreesRanges` (array[`degreesRange`])

## focusCapability (object)

+ steps (stepsRange) - The step range of the capability.
+ degrees (degreesRange) - The degree range of the capability.

## `focusCapabilitys` (array[`focusCapability`])

## panCapability (object)

+ steps (stepsRange) - The step range of the capability.
+ degrees (degreesRange) - The degree range of the capability.

## `panCapabilitys` (array[`panCapability`])

## stepsRange (object)

+ max (number) - The maximum allowed range.
+ min (number) - The minimum allowed range.
+ step (number) - The minimum step.

## `stepsRanges` (array[`stepsRange`])

## tiltCapability (object)

+ steps (stepsRange) - The step range of the capability.
+ degrees (degreesRange) - The degree range of the capability.

## `tiltCapabilitys` (array[`tiltCapability`])

## zoomCapability (object)

+ steps (stepsRange) - The step range of the capability.
+ degrees (degreesRange) - The degree range of the capability.
+ ratio: `22` (number, default) - Max ratio of zoom

## `zoomCapabilitys` (array[`zoomCapability`])

## chime (object)

+ id: `5be5fbde01331d19da0003e9`(string) - Primary key.
+ mac: `24A43C3DFEB9` (string) - The primary MAC address of the device.
+ host: `null` (string, default) - The primary IP address of the device.
+ connectionHost: `null` (string, default) - The ip or hostname the device uses to connect.
+ type: `null` (string, default) - The device model name.
+ name: `null` (string, default) - The name of the device.
+ upSince (number) - Unix timestamp of when the device started up.
+ uptime (number) - device uptime in second.
+ lastSeen (number) - Unix timestamp of when the device was last connected.
+ connectedSince (number) - Unix timestamp of when the device connected to the NVR.
+ state: `DISCONNECTED` (enum[string], default) - Connection state of the device.
  + `CONNECTED`
  + `CONNECTING`
  + `DISCONNECTED`
+ lastDisconnect (number) - Unix timestamp of the last time the device disconnected.
+ hardwareRevision: `null` (string, default) - Hardware revision of the device
+ firmwareVersion: `null` (string, default) - The version of firmware that is installed on the device.
+ latestFirmwareVersion: `null` (string, default) - The latest firmware version of the device.
+ firmwareBuild: `null` (string, default) - The build # of the firmware that is installed.
+ isUpdating: `false` (boolean, default) - Whether the device is currently updating
+ isDownloadingFW: `false` (boolean, default) - Whether the device is currently downloading a FW for an upgrade
+ fwUpdateState: `null` (enum[string], default) - The device FW update state.
  + `upToDate`
  + `preparing`
  + `updating`
  + `downloading`
  + `failed`
  + `queueing`
  + `updateAvailable`
+ isAdopting: `false` (boolean, default) - Whether or not the device is currently being adopted.
+ isRestoring: `false` (boolean, default) - Whether or not the device is currently being restored.
+ isAdopted: `false` (boolean, default) - Whether or not the device is adopted.
+ isAdoptedByOther: `false` (boolean, default) - Whether or not the device is adopted by the other controller.
+ isProvisioned: `false` (boolean, default) - Whether or not the device is provisioned.
+ isRebooting: `false` (boolean, default) - Whether the device is currently rebooting
+ isSshEnabled: `false` (boolean, default) - Whether or not SSH is enabled
+ canAdopt: `false` (boolean, default) - Whether or not the device can be adopted.
+ isAttemptingToConnect: `false` (boolean, default) - Whether the device is attempting to connect to the controller
+ wiredConnectionState (wiredConnectionState) - Wired connection state of the device.
+ isConnected (boolean) - Whether the device IPC is connected?
+ marketName (string) - The marketing name for the chime.
+ nvrMac: `24A43C3DFEB9` (string) - The MAC address of the NVR managed this device.
+ guid: `null` (string, default) - Unique id of the device
+ anonymousDeviceId: `null` (string, default) - Persistent unique device identifier.
+ volume: `80` (number, default) - Speaker volume: a number from 0-100.
+ trackNo: `1` (number, default) - The track number currently being used by chime
+ repeatTimes: `1` (number, default) - Repeat time of playing chime
+ speakerTrackList: `[]` (array, default) - available speaker track list of chime
+ isProbingForWifi: `false` (boolean, default) - Whether the device is probing for a network over wireless uplink
+ apMac: `80:2a:a8:13:0b:56` (string) - The MAC address of the AP that discovered this chime over wireless uplink
+ apRssi (number) - The received signal strength indication of the AP that discovered this chime over wireless uplink
+ apMgmtIp: `null` (string, default) - The management IP address of the AP that discovered this chime over wireless uplink
+ elementInfo: `SEVMTE8=` (string) - The element information provided by this chime while it was probing for a wireless network
+ wifiConnectionState (wifiConnectionState) - Wi-Fi connection state of the device.
+ lastRing (number) - Unix timestamp of the last time the chime rang.
+ isWirelessUplinkEnabled: `true` (boolean, default) - is wireless uplink enabled?
+ cameraIds (array[string]) - The list of paired cameras. (Doorbell series)
+ featureFlags (deviceFeatureFlags) - Feature flags of the chime
+ userConfiguredAp: `false` (boolean, default) - Whether the connected AP is user configured
+ platform (string) - The chime platform
+ ringSettings (array[ringSettings]) - The list of paired cameras ring settings. (Doorbell series)

## `chimes` (array[`chime`])

## ringSettings (object)

+ camera (string) - Which camera (Doorbell series) is configured to this setting.
+ volume: `80` (number, default) - Speaker volume: a number from 0-100.
+ trackNo: `1` (number, default) - The track number which is being used
+ repeatTimes: `1` (number, default) - Repeat time of playing chime

## `ringSettingss` (array[`ringSettings`])

## detectionLabel (object)

+ id: `5be5fbde01331d19da0003e9`(string) - Primary key.
+ event (string) - Which event this pre-processed data belongs to.
+ labels: `[]` (array[number], default) - labels of the event
+ identities (array) - identifieds values

## `detectionLabels` (array[`detectionLabel`])

## doorlockBatteryStatus (object)

+ percentage (number) - Battery charge level from 0 to 100 (%).
+ isLow: `false` (boolean, default) - Low battery charge level flag.

## `doorlockBatteryStatuss` (array[`doorlockBatteryStatus`])

## doorlock (object)

+ id: `5be5fbde01331d19da0003e9`(string) - Primary key.
+ mac: `24A43C3DFEB9` (string) - The primary MAC address of the device.
+ connectionHost: `null` (string, default) - The ip or hostname the device uses to connect.
+ type: `null` (string, default) - The device model name.
+ name: `null` (string, default) - The name of the device.
+ upSince (number) - Unix timestamp of when the device started up.
+ uptime (number) - device uptime in second.
+ lastSeen (number) - Unix timestamp of when the device was last connected.
+ connectedSince (number) - Unix timestamp of when the device connected to the NVR.
+ state: `DISCONNECTED` (enum[string], default) - Connection state of the device.
  + `CONNECTED`
  + `CONNECTING`
  + `DISCONNECTED`
+ lastDisconnect (number) - Unix timestamp of the last time the device disconnected.
+ hardwareRevision: `null` (string, default) - Hardware revision of the device
+ firmwareVersion: `null` (string, default) - The version of firmware that is installed on the device.
+ latestFirmwareVersion: `null` (string, default) - The latest firmware version of the device.
+ firmwareBuild: `null` (string, default) - The build # of the firmware that is installed.
+ isUpdating: `false` (boolean, default) - Whether the device is currently updating
+ isDownloadingFW: `false` (boolean, default) - Whether the device is currently downloading a FW for an upgrade
+ fwUpdateState: `null` (enum[string], default) - The device FW update state.
  + `upToDate`
  + `preparing`
  + `updating`
  + `downloading`
  + `failed`
  + `queueing`
  + `updateAvailable`
+ isAdopting: `false` (boolean, default) - Whether or not the device is currently being adopted.
+ isRestoring: `false` (boolean, default) - Whether or not the device is currently being restored.
+ isAdopted: `false` (boolean, default) - Whether or not the device is adopted.
+ isAdoptedByOther: `false` (boolean, default) - Whether or not the device is adopted by the other controller.
+ isProvisioned: `false` (boolean, default) - Whether or not the device is provisioned.
+ isRebooting: `false` (boolean, default) - Whether the device is currently rebooting
+ isSshEnabled: `false` (boolean, default) - Whether or not SSH is enabled
+ canAdopt: `false` (boolean, default) - Whether or not the device can be adopted.
+ isAttemptingToConnect: `false` (boolean, default) - Whether the device is attempting to connect to the controller
+ wiredConnectionState (wiredConnectionState) - Wired connection state of the device.
+ isConnected (boolean) - Whether the device IPC is connected?
+ marketName (string) - The marketing name for the doorlock.
+ nvrMac: `24A43C3DFEB9` (string) - The MAC address of the NVR managed this device.
+ guid: `null` (string, default) - Unique id of the device
+ anonymousDeviceId: `null` (string, default) - Persistent unique device identifier.
+ credentials: `null` (string, default) - Authentication Key of the doorlock.
+ lockStatus: `OPEN` (enum[string], default) - Lock status of the doorlock.
  + `OPEN`
  + `OPENING`
  + `CLOSED`
  + `CLOSING`
  + `JAMMED_WHILE_CLOSING`
  + `JAMMED_WHILE_OPENING`
  + `FAILED_WHILE_CLOSING`
  + `FAILED_WHILE_OPENING`
  + `NOT_CALIBRATED`
  + `AUTO_CALIBRATION_IN_PROGRESS`
  + `CALIBRATION_WAITING_OPEN`
  + `CALIBRATION_WAITING_CLOSE`
+ enableHomekit: `false` (boolean, default) - Whether or not to enable homekit service.
+ autoCloseTimeMs: `0` (number, default) - Time after which lock will close automatically. (0 means disable)
+ ledSettings (doorlockLedSettings) - Status LED settings.
+ bluetoothConnectionState (bluetoothConnectionState) - Bluetooth connection state of the doorlock.
+ batteryStatus (doorlockBatteryStatus) - Battery status.
+ bridge (string) - Which bridge is able to connect to the doorlock.
+ camera (string) - Which camera is configured to be paired to the doorlock.
+ bridgeCandidates: `[]` (array[bridgeCandidate], default) - A list of bridge candidates for adoption and reconnection.
+ hasHomekit (boolean) - Whether the doorlock and bridge support homekit.

## `doorlocks` (array[`doorlock`])

## doorlockLedSettings (object)

+ isEnabled: `true` (boolean, default) - Enable status LED.

## `doorlockLedSettingss` (array[`doorlockLedSettings`])

## event (object)

+ id: `5be5fbde01331d19da0003e9`(string) - Primary key.
+ type: `motion` (enum[string], default) - The type of event.
  + `disconnect,factoryReset,provision,update,cameraPowerCycling,ring,doorAccess,resolutionLowered,poorConnection,streamRecovery,motion,recordingDeleted,smartAudioDetect,smartDetectZone,smartDetectLine,nonScheduledRecording,recordingModeChanged,hotplug,faceGroupDetected,cameraConnected,cameraRebooted,cameraDisconnected,installed,corruptedDbRecovered,offline,off,reboot,fwUpdate,applicationUpdate,applicationUpdatable,access,driveFailed,cameraUtilizationLimitReached,cameraUtilizationLimitExceeded,driveSlow,globalRecordingModeChanged,nvrSettingsChanged,unadoptedDeviceDiscovered,multipleUnadoptedDeviceDiscovered,deviceAdopted,deviceUnadopted,devicesPasswordUpdated,deviceUpdatable,multipleDeviceUpdatable,deviceConnected,deviceRebooted,deviceDisconnected,networkDeviceOffline,sensorMotion,sensorOpened,sensorClosed,sensorAlarm,sensorExtremeValues,sensorWaterLeak,sensorBatteryLow,lightMotion,doorlockOpened,doorlockClosed,doorlockBatteryLow,userLeft,userArrived,videoExported,microphoneDisabled,videoDeleted,recordingScheduleChanged,ringDisruptedConditions`
+ start: `1445408038748` (number) - Unix timestamp of the start time of the event.
+ end: `1445408038748` (number) - Unix timestamp of the start time of the event.
+ camera (string) - Which camera this event belongs to. If null, it's a system-wide event
+ partition (string) - The partition this event is tied to
+ thumbnail (string) - The thumbnail that this event has a reference to
+ packageThumbnail (string) - The thumbnail that this partition has a reference to
+ heatmap (string) - The heatmap that this partition has a reference to
+ score: `0` (number, default) - The highest motion score in this event.
+ smartDetectTypes: `[]` (enum[array], default) - A list of detected object types in this smart detection event.
  + `person`
  + `vehicle`
  + `package`
  + `licensePlate`
  + `face`
  + `animal`
  + `alrmSmoke`
  + `alrmCmonx`
  + `alrmSiren`
  + `alrmBabyCry`
  + `alrmSpeak`
  + `alrmBark`
  + `alrmBurglar`
  + `alrmCarHorn`
  + `alrmGlassBreak`
+ smartDetectEvents: `[]` (array, default) - A list of related smart detect event IDs.
+ user (string) - Which user this event belongs to. If null, it's not an access event
+ metadata (object) - Metadata attached to this event.
+ deletionType (enum[string]) - Is it manual deletion by user or automatic by scripts
  + `manual`
  + `automatic`

## `events` (array[`event`])

## deviceGroup (object)

+ id: `5be5fbde01331d19da0003e9`(string) - Primary key.
+ name: `null` (string, default) - The name of this device-group
+ items: `[]` (array, default) - The items of this device-group, each item format like "<device_modelKey>:<device_id>".

## `deviceGroups` (array[`deviceGroup`])

## group (object)

+ id: `5be5fbde01331d19da0003e9`(string) - Primary key.
+ name (string) - The name of this role.
+ permissions: `[]` (array, default) - The list of permissions granted to users with this role.
+ type: `custom` (enum[string], default) - The type of group.
  + `preset`
  + `custom`
+ isDefault: `false` (boolean, default) - Whether a user will have this role by default when no role was specified during user creation.

## `groups` (array[`group`])

## heatmap (object)

+ id: `5be5fbde01331d19da0003e9`(string) - Primary key.
+ camera (string) - Which camera the heatmap belongs to.
+ event (string) - Which camera the heatmap belongs to.

## `heatmaps` (array[`heatmap`])

## packageThumbnail (object)

+ id: `5be5fbde01331d19da0003e9`(string) - Primary key.
+ width: `640` (number) - Width of the thumbnail.
+ height: `360` (number) - Height of the thumbnail.
+ timestamp: `1445408038748` (number) - Unix timestamp when the snapshot was taken.
+ camera (string) - Which camera the thumbnail belongs to.
+ event (string) - Which event the thumbnail belongs to.
+ isFullfov: `false` (boolean, default) - Whether or not the thumbnail is full-FoV or cropped.

## `packageThumbnails` (array[`packageThumbnail`])

## thumbnail (object)

+ id: `5be5fbde01331d19da0003e9`(string) - Primary key.
+ width: `640` (number) - Width of the thumbnail.
+ height: `360` (number) - Height of the thumbnail.
+ timestamp: `1445408038748` (number) - Unix timestamp when the snapshot was taken.
+ camera (string) - Which camera the thumbnail belongs to.
+ event (string) - Which event the thumbnail belongs to.
+ isFullfov: `false` (boolean, default) - Whether or not the thumbnail is full-FoV or cropped.

## `thumbnails` (array[`thumbnail`])

## label (object)

+ id: `5be5fbde01331d19da0003e9`(string) - Primary key.
+ lid (number) - id of label
+ name (enum[string]) - name of label
  + `color:black`
  + `color:blue`
  + `color:brown`
  + `color:gray`
  + `color:green`
  + `color:orange`
  + `color:pink`
  + `color:purple`
  + `color:red`
  + `color:white`
  + `color:yellow`
  + `eventType:smartAudioDetect`
  + `eventType:smartDetectLine`
  + `eventType:smartDetectZone`
  + `eventType:motion`
  + `eventType:ring`
  + `eventType:doorAccess`
  + `smartDetectType:alrmCmonx`
  + `smartDetectType:alrmSmoke`
  + `smartDetectType:alrmSiren`
  + `smartDetectType:alrmBabyCry`
  + `smartDetectType:alrmSpeak`
  + `smartDetectType:alrmBark`
  + `smartDetectType:alrmBurglar`
  + `smartDetectType:alrmCarHorn`
  + `smartDetectType:alrmGlassBreak`
  + `smartDetectType:package`
  + `smartDetectType:person`
  + `smartDetectType:vehicle`
  + `smartDetectType:licensePlate`
  + `smartDetectType:face`
  + `smartDetectType:animal`
  + `doorAccess:exit`
  + `doorAccess:entry`
+ lastSeen (number) - The label was last seen at (ms)

## `labels` (array[`label`])

## light (object)

+ id: `5be5fbde01331d19da0003e9`(string) - Primary key.
+ mac: `24A43C3DFEB9` (string) - The primary MAC address of the device.
+ host: `null` (string, default) - The primary IP address of the device.
+ connectionHost: `null` (string, default) - The ip or hostname the device uses to connect.
+ type: `null` (string, default) - The device model name.
+ name: `null` (string, default) - The name of the device.
+ upSince (number) - Unix timestamp of when the device started up.
+ uptime (number) - device uptime in second.
+ lastSeen (number) - Unix timestamp of when the device was last connected.
+ connectedSince (number) - Unix timestamp of when the device connected to the NVR.
+ state: `DISCONNECTED` (enum[string], default) - Connection state of the device.
  + `CONNECTED`
  + `CONNECTING`
  + `DISCONNECTED`
+ lastDisconnect (number) - Unix timestamp of the last time the device disconnected.
+ hardwareRevision: `null` (string, default) - Hardware revision of the device
+ firmwareVersion: `null` (string, default) - The version of firmware that is installed on the device.
+ latestFirmwareVersion: `null` (string, default) - The latest firmware version of the device.
+ firmwareBuild: `null` (string, default) - The build # of the firmware that is installed.
+ isUpdating: `false` (boolean, default) - Whether the device is currently updating
+ isDownloadingFW: `false` (boolean, default) - Whether the device is currently downloading a FW for an upgrade
+ fwUpdateState: `null` (enum[string], default) - The device FW update state.
  + `upToDate`
  + `preparing`
  + `updating`
  + `downloading`
  + `failed`
  + `queueing`
  + `updateAvailable`
+ isAdopting: `false` (boolean, default) - Whether or not the device is currently being adopted.
+ isRestoring: `false` (boolean, default) - Whether or not the device is currently being restored.
+ isAdopted: `false` (boolean, default) - Whether or not the device is adopted.
+ isAdoptedByOther: `false` (boolean, default) - Whether or not the device is adopted by the other controller.
+ isProvisioned: `false` (boolean, default) - Whether or not the device is provisioned.
+ isRebooting: `false` (boolean, default) - Whether the device is currently rebooting
+ isSshEnabled: `false` (boolean, default) - Whether or not SSH is enabled
+ canAdopt: `false` (boolean, default) - Whether or not the device can be adopted.
+ isAttemptingToConnect: `false` (boolean, default) - Whether the device is attempting to connect to the controller
+ wiredConnectionState (wiredConnectionState) - Wired connection state of the device.
+ isConnected (boolean) - Whether the device IPC is connected?
+ marketName (string) - The marketing name for the floodlight.
+ nvrMac: `24A43C3DFEB9` (string) - The MAC address of the NVR managed this device.
+ guid: `null` (string, default) - Unique id of the device
+ anonymousDeviceId: `null` (string, default) - Persistent unique device identifier.
+ lightDeviceSettings (lightDeviceSettings) - Device settings for light.
+ lightOnSettings (lightOnSettings) - Force light on settings for light.
+ lightModeSettings (lightModeSettings) - User Selected script light Mode Settings for light.
+ camera (string) - Which camera is configured to be paired to this light.
+ isPirMotionDetected: `false` (boolean, default) - Whether the light PIR is currently detecting motion
+ lastMotion (number) - Unix timestamp of the last PIR trigger.
+ isDark: `false` (boolean, default) - Whether the floodlight is currently in dark scene.
+ isLightOn: `false` (boolean, default) - Whether the floodlight main LED is currently on.
+ isLocating: `false` (boolean, default) - Whether the floodlight is currently in locating.
+ isCameraPaired (boolean) - Whether the floodlight is pairing to camera.

## `lights` (array[`light`])

## lightDeviceSettings (object)

+ isIndicatorEnabled: `true` (boolean, default) - Turn on/off floodlight status LED indicator.
+ ledLevel: `3` (number, default) - LED brightness level (1-6).
+ luxSensitivity: `medium` (enum[string], default) - The sensitivity of lux sensor.
  + `low`
  + `medium`
  + `high`
+ pirDuration: `15000` (number, default) - PIR triggered delay shutoff light in milliseconds.
+ pirSensitivity: `80` (number, default) - PIR Motion sensitivity (0-100).

## `lightDeviceSettingss` (array[`lightDeviceSettings`])

## lightModeSettings (object)

+ mode: `motion` (enum[string], default) - When will floodlight turn on.
  + `off`
  + `always`
  + `motion`
  + `schedule`
+ enableAt: `fulltime` (enum[string], default) - Only turn on at certain times.
  + `dark`
  + `night`
  + `fulltime`

## `lightModeSettingss` (array[`lightModeSettings`])

## lightOnSettings (object)

+ isLedForceOn: `false` (boolean, default) - Force turn the light on/off.

## `lightOnSettingss` (array[`lightOnSettings`])

## liveview (object)

+ id: `5be5fbde01331d19da0003e9`(string) - Primary key.
+ name (string) - The name of this live view.
+ isDefault: `false` (boolean, default) - If `true`, this live view is the default.
+ isGlobal: `false` (boolean, default) - If `true`, this live view is global and available system-wide to all users
+ owner (string) - The user who created this live view.
+ layout: `4` (enum[number], default) - The layout of this live view, provides the number of slots.
  + `1`
  + `2`
  + `3`
  + `4`
  + `5`
  + `6`
  + `7`
  + `8`
  + `9`
  + `10`
  + `11`
  + `12`
  + `13`
  + `14`
  + `15`
  + `16`
  + `17`
  + `18`
  + `19`
  + `20`
  + `21`
  + `22`
  + `23`
  + `24`
  + `25`
  + `26`
+ slots (array) - Array of slots.

## `liveviews` (array[`liveview`])

## deviceImage (object)

+ id: `5be5fbde01331d19da0003e9`(string) - Primary key.
+ xs: `null` (string, default) - URL of xs size image.
+ s: `null` (string, default) - URL of s size image.
+ m: `null` (string, default) - URL of m size image.
+ l: `null` (string, default) - URL of l size image.
+ xl: `null` (string, default) - URL of xl size image.

## `deviceImages` (array[`deviceImage`])

## networkDevice (object)

+ mac: `5be5fbde01331d19da0003e9`(string) - Primary key.
+ mac: `aa:bb:cc:dd:ee:ff` (string) - The primary MAC address of the device (not normalized).
+ ip: `null` (string, default) - The primary IP address of the device.
+ name: `null` (string, default) - The name of the device.
+ status (enum[string]) - State of the device.
  + `online`
  + `updating`
  + `removed`
  + `restarting`
  + `resetting`
  + `offline`
  + `adopting`
  + `unknown`
+ firmwareStatus (enum[string]) - Firmware status of the device.
  + `upToDate`
  + `updateAvailable`
  + `unknown`
+ firmware: `null` (string, default) - The version of firmware that is installed on the device.
+ startupTime (number) - Unix timestamp in seconds of when the device started up.
+ guid: `null` (string, default) - Unique id of the device.
+ directConnectDomain: `null` (string, default) - Direct connect domain.
+ shortname: `null` (string, default) - Short name of the device.
+ model: `null` (string, default) - The model of the device.
+ isManaged: `false` (boolean, default) - Whether the device is being managed.
+ productLine: `null` (string, default) - The product line.
+ images (deviceImage) - Device images.
+ metadata (object) - Metadata of the device.
+ capabilities: `[]` (array, default) - Capabilities of the device.

## `networkDevices` (array[`networkDevice`])

## nvrCloudBackupInfo (object)

+ controllerStatus: `BUSY` (string, default) - The name of this nvr device.
+ restorePercentage: `0` (number, default)

## `nvrCloudBackupInfos` (array[`nvrCloudBackupInfo`])

## cloudConnection (object)

+ enabled: `false` (boolean, default) - Whether cloud connection is enabled.
+ deviceId (string) - Cloud device id.
+ deviceAuth (string) - Cloud device auth.
+ env (string) - Cloud environment.

## `cloudConnections` (array[`cloudConnection`])

## dbRecoveryOptions (object)

+ canRecover (boolean) - Whether the DB recovery is possible.
+ hddFailing (boolean) - Whether ustorage reports HDD as failing.
+ partitionReadonly (boolean) - Whether Protect partition is marked as readonly.
+ hasDbBackup (boolean) - Whether DB backup is available for current Protect version.
+ hasConfigBackup (boolean) - Whether config backup is available from download.

## `dbRecoveryOptionss` (array[`dbRecoveryOptions`])

## deviceFirmwareSettings (object)

+ configuredBy: `protect` (string, default) - Where this config from. could be uos | protect
+ isAutoUpdateEnabled: `true` (boolean, default) - Whether auto update enabled.
+ schedule (deviceFirmwareUpdateSchedule) - auto update schedule

## `deviceFirmwareSettingss` (array[`deviceFirmwareSettings`])

## deviceFirmwareUpdateSchedule (object)

+ hour: `3` (number, default) - Which hour to update firmware

## `deviceFirmwareUpdateSchedules` (array[`deviceFirmwareUpdateSchedule`])

## doorbellSettings (object)

+ defaultMessageText: `WELCOME` (string, default) - Default text to display on the LCD screen.
+ defaultMessageResetTimeoutMs: `60000` (number, default) - Default timeout for resetting LCD screen to the default message.
+ customMessages: `[]` (array, default) - A list of custom doorbell messages.
+ allMessages (array) - All the messages (default + custom).

## `doorbellSettingss` (array[`doorbellSettings`])

## nvrFeatureFlags (object)

+ beta: `false` (boolean, default) - Whether beta features are enabled.
+ dev: `false` (boolean, default) - Whether dev features are enabled.
+ notificationsV2: `true` (boolean, default) - Whether we are supporting V2 notifications.
+ homekitPaired: `false` (boolean, default) - Whether homekit controller is paired.
+ ulpRoleManagement: `false` (boolean, default) - Whether ULP role management is enabled.
+ detectionLabels: `false` (boolean, default) - Whether detection label is finished
+ hasTwoWayAudioMediaStreams: `true` (boolean, default) - Whether two way audio over WebRTC media streams is supported.

## `nvrFeatureFlagss` (array[`nvrFeatureFlags`])

## globalCameraSettings (object)

+ osdSettings (osdSettings) - Osd settings
+ recordingSettings (cameraRecordingSettings) - Recording settings for cameras.
+ recordingSchedulesV2 (array[scheduleRule]) - The global recording schedule
+ smartDetectSettings (smartDetectSettings) - Smart detect settings for cameras

## `globalCameraSettingss` (array[`globalCameraSettings`])

## nvrIOStats (object)

+ bytesWritten: `0` (number, default) - The number of bytes written to the storage layer.
+ timestamp: `0` (number, default) - Unix timestamp of when I/O stats were saved.
+ writeThroughput: `0` (number, default) - Write throughput to the storage layer in bytes per second.

## `nvrIOStatss` (array[`nvrIOStats`])

## locationSettings (object)

+ isAway: `false` (boolean, default) - If all users are away.
+ isGeofencingEnabled: `false` (boolean, default) - Whether geofencing for this device is enabled.
+ latitude (number) - Latitude where device is located.
+ longitude (number) - Longitude where device is located.
+ radius (number) - Radius of geofence area. This affects the sensitivity of home/away status.

## `locationSettingss` (array[`locationSettings`])

## nvr (object)

+ id: `5be5fbde01331d19da0003e9`(string) - Primary key.
+ mac: `24A43C3DFEB9` (string) - The primary MAC address of the device.
+ host: `192.168.1.20` (string) - The primary IP address of the device.
+ name: `Home` (string, default) - The name of this nvr device.
+ canAutoUpdate: `false` (boolean, default) - Whether or not the NVR can update software automatically.
+ isStatsGatheringEnabled: `true` (boolean, default) - Whether or not the NVR can report statistics.
+ timezone: `UTC` (string, default) - The timezone of the NVR (this also gets applied to any managed cameras).
+ version: `1.0.0` (string) - Software version.
+ ucoreVersion: `1.0.0` (string) - UCore version
+ ulpVersion: `null` (string, default) - ULP version.
+ firmwareVersion: `null` (string, default) - Firmware Version of the device.
+ uiVersion: `null` (string, default) - LCD UI version.
+ hardwarePlatform: `null` (string, default) - Hardware platform of the device.
+ ports (object) - key/value map of ports used.
+ upSince (number) - The NVR upSince. [ms]
+ uptime: `1445408038748` (number) - System uptime in milliseconds.
+ lastSeen (number) - Unix timestamp of when the NVR was last seen.
+ isUpdating: `false` (boolean, default) - If the NVR is currently updating
+ lastUpdateAt (number) - Unix timestamp of when the nvr was last updated.
+ isStation: `false` (boolean, default) - Whether or not this NVR is connected as a wifi station
+ enableAutomaticBackups: `true` (boolean, default) - Whether or not to enable automatic backups.
+ enableStatsReporting: `false` (boolean, default) - Whether or not to enable stats gathering/reporting.
+ isSshEnabled: `false` (boolean, default) - Whether or not to enable SSH
+ errorCode: `null` (string, default) - current error code (can be null), used by LCD UI
+ releaseChannel: `release` (enum[string], default) - The release channel of Protect build is on.
  + `alpha`
  + `beta`
  + `release`
+ ssoChannel: `null` (enum[string], default) - The release channel this device is on (used for automatic updates).
  + `internal`
  + `alpha`
  + `beta`
  + `release-candidate`
  + `release`
+ hosts: `["192.168.0.100"]` (array) - An array of hosts.
+ enableBridgeAutoAdoption: `true` (boolean, default) - Enable auto-adoption of discovered bridges.
+ dbRecoveryOptions (dbRecoveryOptions) - DB recovery options.
+ type (string) - The NVR model name.
+ isAway (boolean) - Whether the NVR is configure locationSettings.isAway.
+ isSetup (boolean) - Whether the Protect is setup.
+ isUCoreSetup: `false` (boolean, default) - Whether the UCore is setup.
+ network (string) - Network description.
+ hardwareId: `ee03d4db-ecfd-55e7-9921-665d17c93052` (string) - hardware id
+ hardwareRevision: `113-02247-04` (string) - human readable version of bom
+ hostType (number) - host type
+ hostShortname: `null` (string, default) - Device model that hosts the controller.
+ isHardware: `false` (boolean, default) - is hardware nvr?
+ isWirelessUplinkEnabled: `false` (boolean, default) - is wireless uplink enabled for all devices?
+ timeFormat: `12h` (enum[string], default) - 12h (standard time) or 24h (army time)
  + `12h`
  + `24h`
+ temperatureUnit: `C` (enum[string], default) - Fahrenheit or Celsius
  + `C`
  + `F`
+ wifiSettings (wifiSettings) - Wi-Fi settings.
+ locationSettings (locationSettings) - Location Settings.
+ featureFlags (nvrFeatureFlags) - Feature flags.
+ systemInfo (systemInfo) - System Information.
+ recordingRetentionDurationMs: `172800000` (number) - Duration in milliseconds to retain videos before staging them for recycling. camera recordingSettings.retentionDurationMs takes precedence over this value
+ enableCrashReporting: `true` (boolean, default) - Whether or not any data is sent to Error reporting service.
+ disableAudio: `false` (boolean, default) - Whether audio recording is disabled globally
+ doorbellSettings (doorbellSettings) - Doorbell related settings.
+ analyticsData: `anonymous` (enum[string], default) - What analytics data traces are sent to the Analytics service.
  + `none`
  + `anonymous`
  + `full`
+ anonymousDeviceId: `null` (string, default) - Persistent unique host device identifier.
+ smartDetectAgreement (smartDetectAgreement) - User agreement for smart detection feature.
+ isRecordingDisabled: `false` (boolean, default) - Recording is disabled.
+ isRecordingMotionOnly: `false` (boolean, default) - Record motion only.
+ isInsightsEnabled: `true` (boolean, default) - Enable/Disable Insights
+ maxCameraCapacity (object) - The max camera capacity of NVR.
+ cameraUtilization (number) - Percentage of the current cameras capacity of the NVR.
+ storageStats (nvrStatsStorage) - Storage statistics for the nvr.
+ isRecycling: `false` (boolean, default) - If recording files are getting recycled due to the lack of free disk space.
+ disableAutoLink: `false` (boolean, default) - Disable AutoLink
+ skipFirmwareUpdate: `false` (boolean, default) - Skip device firmware auto update
+ countryCode: `null` (string, default) - Country code of console.
+ publicIp: `null` (string, default) - Public IP of console.
+ cameraCapacity (object) - Camera capacity details
+ hardDriveState: `ok` (string, default) - State of hard drives
+ isProtectUpdatable: `false` (boolean, default) - whether updatable from ucore
+ streamSharingAvailable: `false` (boolean, default) - Whether camera stream sharing feature is available.
+ globalCameraSettings (globalCameraSettings) - global camera settings
+ deviceFirmwareSettings (deviceFirmwareSettings) - device firmware settings
+ corruptionState: `healthy` (enum[string], default) - Protect corruption state.
  + `healthy`
  + `ssd-corrupted`
  + `hdd-corrupted`
  + `hdd-ejected`
+ portStatus: `[]` (array, default) - Console port occupation status.
+ wanIp: `null` (string, default) - WAN IP of console.
+ hasGateway: `false` (boolean, default) - Define if console has gateway
+ isUcoreUpdatable: `false` (boolean, default) - Define if console firmware is updatable or not
+ isNetworkInstalled: `false` (boolean, default) - Define if network application is installed or not
+ lastDeviceFWUpdatesCheckedAt (number) - The last time the firmware was checked
+ marketName (string) - The market name of console
+ isPrimary: `false` (boolean, default) - Whether or not this NVR is primary.
+ isStacked (boolean) - Whether or not this NVR is (member) stack.
+ lastDriveSlowEvent (number) - Unix timestamp of when the nvr had last driveSlow event.
+ isUCoreStacked (boolean) - Whether or not the ucore is stacked. `null` means not initialized from the UCore yet.

## `nvrs` (array[`nvr`])

## nvrStack (object)

+ id: `5be5fbde01331d19da0003e9`(string) - Primary key.
+ mac: `24A43C3DFEB9` (string) - The primary MAC address of the device.
+ host: `192.168.1.20` (string) - The primary IP address of the device.
+ name: `Home` (string, default) - The name of this nvr device.
+ canAutoUpdate: `false` (boolean, default) - Whether or not the NVR can update software automatically.
+ isStatsGatheringEnabled: `true` (boolean, default) - Whether or not the NVR can report statistics.
+ timezone: `UTC` (string, default) - The timezone of the NVR (this also gets applied to any managed cameras).
+ version: `1.0.0` (string) - Software version.
+ ucoreVersion: `1.0.0` (string) - UCore version
+ ulpVersion: `null` (string, default) - ULP version.
+ firmwareVersion: `null` (string, default) - Firmware Version of the device.
+ uiVersion: `null` (string, default) - LCD UI version.
+ hardwarePlatform: `null` (string, default) - Hardware platform of the device.
+ ports (object) - key/value map of ports used.
+ upSince (number) - The NVR upSince. [ms]
+ uptime: `1445408038748` (number) - System uptime in milliseconds.
+ lastSeen (number) - Unix timestamp of when the NVR was last seen.
+ isUpdating: `false` (boolean, default) - If the NVR is currently updating
+ lastUpdateAt (number) - Unix timestamp of when the nvr was last updated.
+ isStation: `false` (boolean, default) - Whether or not this NVR is connected as a wifi station
+ enableAutomaticBackups: `true` (boolean, default) - Whether or not to enable automatic backups.
+ enableStatsReporting: `false` (boolean, default) - Whether or not to enable stats gathering/reporting.
+ isSshEnabled: `false` (boolean, default) - Whether or not to enable SSH
+ errorCode: `null` (string, default) - current error code (can be null), used by LCD UI
+ releaseChannel: `release` (enum[string], default) - The release channel of Protect build is on.
  + `alpha`
  + `beta`
  + `release`
+ ssoChannel: `null` (enum[string], default) - The release channel this device is on (used for automatic updates).
  + `internal`
  + `alpha`
  + `beta`
  + `release-candidate`
  + `release`
+ hosts: `["192.168.0.100"]` (array) - An array of hosts.
+ enableBridgeAutoAdoption: `true` (boolean, default) - Enable auto-adoption of discovered bridges.
+ dbRecoveryOptions (dbRecoveryOptions) - DB recovery options.
+ type (string) - The NVR model name.
+ isAway (boolean) - Whether the NVR is configure locationSettings.isAway.
+ isSetup (boolean) - Whether the Protect is setup.
+ isUCoreSetup: `false` (boolean, default) - Whether the UCore is setup.
+ hardwareId: `ee03d4db-ecfd-55e7-9921-665d17c93052` (string) - hardware id
+ hardwareRevision: `113-02247-04` (string) - human readable version of bom
+ hostType (number) - host type
+ hostShortname: `null` (string, default) - Device model that hosts the controller.
+ isHardware: `false` (boolean, default) - is hardware nvr?
+ isWirelessUplinkEnabled: `false` (boolean, default) - is wireless uplink enabled for all devices?
+ timeFormat: `12h` (enum[string], default) - 12h (standard time) or 24h (army time)
  + `12h`
  + `24h`
+ temperatureUnit: `C` (enum[string], default) - Fahrenheit or Celsius
  + `C`
  + `F`
+ wifiSettings (wifiSettings) - Wi-Fi settings.
+ locationSettings (locationSettings) - Location Settings.
+ featureFlags (nvrFeatureFlags) - Feature flags.
+ systemInfo (systemInfo) - System Information.
+ recordingRetentionDurationMs: `172800000` (number) - Duration in milliseconds to retain videos before staging them for recycling. camera recordingSettings.retentionDurationMs takes precedence over this value
+ enableCrashReporting: `true` (boolean, default) - Whether or not any data is sent to Error reporting service.
+ disableAudio: `false` (boolean, default) - Whether audio recording is disabled globally
+ doorbellSettings (doorbellSettings) - Doorbell related settings.
+ analyticsData: `anonymous` (enum[string], default) - What analytics data traces are sent to the Analytics service.
  + `none`
  + `anonymous`
  + `full`
+ anonymousDeviceId: `null` (string, default) - Persistent unique host device identifier.
+ smartDetectAgreement (smartDetectAgreement) - User agreement for smart detection feature.
+ isRecordingDisabled: `false` (boolean, default) - Recording is disabled.
+ isRecordingMotionOnly: `false` (boolean, default) - Record motion only.
+ isInsightsEnabled: `true` (boolean, default) - Enable/Disable Insights
+ maxCameraCapacity (object) - The max camera capacity of NVR.
+ cameraUtilization (number) - Percentage of the current cameras capacity of the NVR.
+ storageStats (nvrStatsStorage) - Storage statistics for the nvr.
+ isRecycling: `false` (boolean, default) - If recording files are getting recycled due to the lack of free disk space.
+ disableAutoLink: `false` (boolean, default) - Disable AutoLink
+ skipFirmwareUpdate: `false` (boolean, default) - Skip device firmware auto update
+ countryCode: `null` (string, default) - Country code of console.
+ publicIp: `null` (string, default) - Public IP of console.
+ cameraCapacity (object) - Camera capacity details
+ hardDriveState: `ok` (string, default) - State of hard drives
+ isProtectUpdatable: `false` (boolean, default) - whether updatable from ucore
+ streamSharingAvailable: `false` (boolean, default) - Whether camera stream sharing feature is available.
+ globalCameraSettings (globalCameraSettings) - global camera settings
+ deviceFirmwareSettings (deviceFirmwareSettings) - device firmware settings
+ corruptionState: `healthy` (enum[string], default) - Protect corruption state.
  + `healthy`
  + `ssd-corrupted`
  + `hdd-corrupted`
  + `hdd-ejected`
+ portStatus: `[]` (array, default) - Console port occupation status.
+ wanIp: `null` (string, default) - WAN IP of console.
+ hasGateway: `false` (boolean, default) - Define if console has gateway
+ isUcoreUpdatable: `false` (boolean, default) - Define if console firmware is updatable or not
+ isNetworkInstalled: `false` (boolean, default) - Define if network application is installed or not
+ lastDeviceFWUpdatesCheckedAt (number) - The last time the firmware was checked
+ marketName (string) - The market name of console
+ isPrimary: `false` (boolean, default) - Whether or not this NVR is primary.
+ canAdopt: `false` (boolean, default) - Whether or not the device can be adopted.
+ state: `DISCONNECTED` (enum[string], default) - Connection state of the device.
  + `CONNECTED`
  + `CONNECTING`
  + `DISCONNECTED`
+ isAdopted: `false` (boolean, default) - Whether or not the NVR is adopted (in stacked).
+ isStacked (boolean) - Whether or not this NVR is a (member) stack.

## `nvrStacks` (array[`nvrStack`])

## smartDetectAgreement (object)

+ status: `pending` (enum[string], default) - User agreement status.
  + `agreed`
  + `declined`
+ lastUpdateAt (number) - Unix timestamp of when the status was last updated.

## `smartDetectAgreements` (array[`smartDetectAgreement`])

## nvrStatsStorage (object)

+ utilization: `0` (number, default)
+ recordingRate (number) - Total estimated recording byte rate in ms
+ capacity: `0` (number, default) - Total estimated time storage capacity in ms
+ remainingCapacity: `0` (number, default) - Remaining estimated time storage capacity in ms
+ recordingSpace (object)
+ storageDistribution (storageDistribution) - Storage distribution.

## `nvrStatsStorages` (array[`nvrStatsStorage`])

## wifiSettings (object)

+ useThirdPartyWifi: `false` (boolean, default) - Whether or not to use third-party wifi.
+ ssid: `null` (string, default) - SSID
+ password: `null` (string, default) - PSK

## `wifiSettingss` (array[`wifiSettings`])

## recordingTypeDistribution (object)

+ recordingType: `rotating` (enum[string], default) - Recording type
  + `rotating`
  + `timelapse`
  + `detections`
+ size: `0` (number, default) - Size in bytes
+ percentage: `0` (number, default)

## `recordingTypeDistributions` (array[`recordingTypeDistribution`])

## resolutionDistribution (object)

+ resolution: `HD` (enum[string], default) - Resolution
  + `HD`
  + `4K`
  + `free`
+ size: `0` (number, default) - Size in bytes
+ percentage: `0` (number, default)

## `resolutionDistributions` (array[`resolutionDistribution`])

## storageDistribution (object)

+ recordingTypeDistributions (array[recordingTypeDistribution]) - Distribution by recording type.
+ resolutionDistributions (array[resolutionDistribution]) - Distribution by resolution.

## `storageDistributions` (array[`storageDistribution`])

## systemInfoCPU (object)

+ averageLoad (number) - Average CPU load between all cores, in %.
+ temperature (number) - CPU temperature, in Celsius.

## `systemInfoCPUs` (array[`systemInfoCPU`])

## systemInfoHDD (object)

+ model (string) - HDD model.
+ size (number) - HDD size, in bytes.
+ healthy (boolean) - HDD health state.

## `systemInfoHDDs` (array[`systemInfoHDD`])

## systemInfoMemory (object)

+ available (number) - Available memory, in bytes.
+ free (number) - Free memory, in bytes.
+ total (number) - Total memory, in bytes.

## `systemInfoMemorys` (array[`systemInfoMemory`])

## systemInfoStorage (object)

+ available (number) - Available storage space, in bytes.
+ devices (array[systemInfoHDD]) - Array of storage devices.
+ isRecycling (boolean) - If recording files are getting recycled due to the lack of free disk space.
+ size (number) - Total storage space, in bytes.
+ type (enum[string]) - Storage type.
  + `hdd`
  + `raid`
  + `sdcard`
+ used (number) - Used storage space, in bytes.
+ capability (enum[string]) - Storage capability
  + `ok`
  + `notEnoughSize`

## `systemInfoStorages` (array[`systemInfoStorage`])

## systemInfo (object)

+ cpu (systemInfoCPU) - CPU info.
+ memory (systemInfoMemory) - Memory info.
+ storage (systemInfoStorage) - Storage info.
+ ustorage (ustorage) - Ustorage info.
+ tmpfs (systemInfoTmpfs) - Tmpfs info.

## `systemInfos` (array[`systemInfo`])

## systemInfoTmpfs (object)

+ available (number) - Available tmpfs space, in Kbytes.
+ total (number) - Total tmpfs space, in Kbytes.
+ used (number) - Used tmpfs space, in Kbytes.
+ path (string) - The path of tmpfs.

## `systemInfoTmpfss` (array[`systemInfoTmpfs`])

## ustorageDisk (object)

+ slot (number) - Slot number, started from 1.
+ type (string) - Disk type, HDD or SSD.
+ model (string) - Disk model reported by itself.
+ size (string) - Disk size reported by itself.
+ serial (string) - Disk serial number reported by itself.
+ firmware (string) - Disk firmware reported by itself.
+ rpm (number) - Rotation rate for HDD, null for SSD.
+ ata (string) - Ata version.
+ sata (string) - Sata version.
+ action (string) - Disk status as a member of storage (none, faulty, spare, repairing, initializing, expanding).
+ healthy (string) - Disk healthy status reported by S.M.A.R.T. (good, risk).
+ state (string) - Disk state, which combine "action" and "healthy" fields (nodisk, broken, risk, faulty, repairing, initializing, expanding, foreign, spare, not_support, normal).
+ reason (object) - Reasons not supported, null when state is not "not_support" (type, limit).
+ temperature (number) - Disk temperature in celsius.
+ poweronhrs (number) - Power on hours.
+ life_span (number) - Remain life span (%) for SSD, null when SSD do not report lifespan, which is meaningless for HDD.
+ bad_sector (number) - Number of bad sector for HDD, which is meaningless for SSD.
+ threshold (number) - Threshold that suggest customer to replace disk, upperbound for bad_sector, lowerbound for lifespan.
+ progress (number) - Percentage of action progress, from 0.0 to 100.0, null if not in repairing state.
+ estimate (number) - Estimate second(s) to complete repairing action, null if not in repairing state.

## `ustorageDisks` (array[`ustorageDisk`])

## ustorageSdcard (object)

+ slot (number) - Slot number, started from 1.
+ type (string) - Sdcard type, always sdcard
+ model (string) - Sdcard model reported by itself.
+ size (string) - Sdcard size reported by itself.
+ serial (string) - Sdcard serial number reported by itself.
+ firmware (string) - Sdcard firmware reported by itself.
+ rpm (number) - Rotation rate for HDD, null for SSD.
+ ata (string) - Ata version.
+ sata (string) - Sata version.
+ action (string) - Sdcard status as a member of storage (none, faulty, spare, repairing, initializing, expanding).
+ healthy (string) - Sdcard healthy status reported by S.M.A.R.T. (good, risk).
+ state (string) - Sdcard state, which combine "action" and "healthy" fields (nodisk, broken, risk, faulty, repairing, initializing, expanding, foreign, spare, not_support, normal).
+ reason (object) - Reasons not supported, null when state is not "not_support" (type, limit).
+ temperature (number) - Sdcard temperature in celsius.
+ poweronhrs (number) - Power on hours.
+ life_span (number) - Remain life span (%) for SSD, null when SSD do not report lifespan, which is meaningless for HDD.
+ bad_sector (number) - Number of bad sector for HDD, which is meaningless for SSD.
+ threshold (number) - Threshold that suggest customer to replace sdcard, upperbound for bad_sector, lowerbound for lifespan.
+ progress (number) - Percentage of action progress, from 0.0 to 100.0, null if not in repairing state.
+ estimate (number) - Estimate second(s) to complete repairing action, null if not in repairing state.

## `ustorageSdcards` (array[`ustorageSdcard`])

## ustorageSpace (object)

+ device (string) - Block device of this space, used as identity.
+ health (string) - Health status (health, atrisk, failed).
+ total_bytes (number) - Space size in bytes.
+ used_bytes (number) - Used size in bytes.
+ action (string) - Action (none, syncing, repairing, expanding, formatting, erasing).
+ progress (number) - Percentage of action progress, from 0.0 to 100.0.
+ estimate (number) - Estimate second(s) to complete repairing action, null if not in repairing state.
+ space_type (string) - Indicates the purpose of this space in the firmware
+ reasons (array) - Reasons for non-health state

## `ustorageSpaces` (array[`ustorageSpace`])

## ustorage (object)

+ disks (array[ustorageDisk]) - Disk array.
+ space (array[ustorageSpace]) - Space info.
+ sdcards (array[ustorageSdcard]) - Sdcard info.

## `ustorages` (array[`ustorage`])

## audioLevel (object)

+ id: `5be5fbde01331d19da0003e9`(string) - Primary key.
+ camera: `CA1B2C3` (string) - What camera this audio level entry belongs to.
+ start: `0` (number, default) - Start value of audio levels hourly update
+ end: `0` (number, default) - End timestamp value of audio levels hourly update
+ levels: `[]` (array[number], default) - Levels 

## `audioLevels` (array[`audioLevel`])

## detection (object)

+ id: `5be5fbde01331d19da0003e9`(string) - Primary key.
+ recordingFile: `RF1B2C3` (string) - What recording file this detection references.
+ eventStart: `1445408038748` (number) - Unix timestamp of the start time of the detection.
+ eventEnd: `1445408038748` (number) - Unix timestamp of the end time of the detection.
+ segmentStart: `1445408038748` (number) - Unix timestamp of the start time of the segment.
+ segmentEnd: `1445408038748` (number) - Unix timestamp of the end time of the segment.
+ size: `0` (number, default) - The size of the detection in bytes.

## `detections` (array[`detection`])

## partition (object)

+ id: `5be5fbde01331d19da0003e9`(string) - Primary key.
+ recordingFile: `RF1B2C3` (string) - What recording file this index references.
+ streamClockStart (number)
+ streamClockEnd (number)
+ start (number)
+ end (number)

## `partitions` (array[`partition`])

## recordingFile (object)

+ id: `5be5fbde01331d19da0003e9`(string) - Primary key.
+ camera: `CA1B2C3` (string) - What camera this recording file belongs to.
+ channel: `0` (number, default) - The ID of the channel that was recorded in this file.
+ type: `rotating` (enum[string], default) - The type of recording file.
  + `archive`
  + `rotating`
  + `timelapse`
+ start: `1445408038748` (number) - Unix timestamp of the start time of the file.
+ end: `1445408038748` (number) - Unix timestamp of the end time of the file.
+ file: `1445383168912_1445383170912_1445383166084_536441154.mp4` (string) - The name of the file.
+ folder: `/videos/3faa10bf-e575-35af-ad3f-c802c1d2a9d5/2015/10/21` (string) - The path of the file.
+ size: `0` (number, default) - The size of the file in bytes.
+ locked: `false` (boolean, default) - True if the file is safe from purging.
+ free: `false` (boolean, default) - True if the file is currently free to be used.
+ active: `false` (boolean, default) - True if the file is currently being written to.

## `recordingFiles` (array[`recordingFile`])

## scheduleRule (object)

+ name: `null` (string, default) - The name of this schedule item.
+ id: `null` (string, default) - The id of this schedule item.
+ startDateOfMonth: `1` (number, default) - The day of month this schedule item applies.
+ startDaysOfWeek: `[]` (array, default) - The weekday this schedule item applies.
+ startHour: `0` (number, default) - Start hour of the day (0-24) when this schedule item applies.
+ startMinute: `0` (number, default) - Start minute of the hour (0-60) when this schedule item applies.
+ durationMinutes: `1` (number, default) - Duration of minutes (1-10080) when this schedule item applies.
+ repeatType: `null` (enum[string], default) - The repeating type of schedule item.
  + `daily`
  + `weekly`
  + `monthly`
  + `none`
  + `null`
+ color: `null` (string, default) - The color of this schedule item.

## `scheduleRules` (array[`scheduleRule`])

## alarmSensorSettings (object)

+ isEnabled: `false` (boolean, default) - Enable smoke and carbon monoxide alarm sensor.

## `alarmSensorSettingss` (array[`alarmSensorSettings`])

## sensorBatteryStatus (object)

+ percentage (number) - Battery charge level from 0 to 100 (%).
+ isLow: `false` (boolean, default) - Low battery charge level flag.

## `sensorBatteryStatuss` (array[`sensorBatteryStatus`])

## humiditySensor (object)

+ value (number) - Reading value.
+ status: `unknown` (enum[string], default) - Reading status.
  + `neutral`
  + `low`
  + `safe`
  + `high`
  + `unknown`

## `humiditySensors` (array[`humiditySensor`])

## humiditySensorSettings (object)

+ isEnabled: `false` (boolean, default) - Enable relative humidity sensor.
+ lowThreshold (number) - Humidity low level threshold from 1 to 99 (%).
+ highThreshold (number) - Humidity high level threshold from 1 to 99 (%).
+ margin: `1` (number, default) - Humidity threshold detection hysteresis margin (%).

## `humiditySensorSettingss` (array[`humiditySensorSettings`])

## sensorLedSettings (object)

+ isEnabled: `true` (boolean, default) - Enable status LED.

## `sensorLedSettingss` (array[`sensorLedSettings`])

## lightSensor (object)

+ value (number) - Reading value.
+ status: `unknown` (enum[string], default) - Reading status.
  + `neutral`
  + `low`
  + `safe`
  + `high`
  + `unknown`

## `lightSensors` (array[`lightSensor`])

## lightSensorSettings (object)

+ isEnabled: `false` (boolean, default) - Enable ambient light sensor.
+ lowThreshold (number) - Ambient light interrupt threshold low level from 1 to 503192 (Lux).
+ highThreshold (number) - Ambient light interrupt threshold high level from 1 to 503192 (Lux).
+ margin: `10` (number, default) - Ambient light threshold detection hysteresis margin (Lux).

## `lightSensorSettingss` (array[`lightSensorSettings`])

## motionSensorSettings (object)

+ isEnabled: `false` (boolean, default) - Enable motion sensor.
+ sensitivity: `100` (number, default) - Motion sensitivity (0-100).

## `motionSensorSettingss` (array[`motionSensorSettings`])

## sensor (object)

+ id: `5be5fbde01331d19da0003e9`(string) - Primary key.
+ mac: `24A43C3DFEB9` (string) - The primary MAC address of the device.
+ connectionHost: `null` (string, default) - The ip or hostname the device uses to connect.
+ type: `null` (string, default) - The device model name.
+ name: `null` (string, default) - The name of the device.
+ upSince (number) - Unix timestamp of when the device started up.
+ uptime (number) - device uptime in second.
+ lastSeen (number) - Unix timestamp of when the device was last connected.
+ connectedSince (number) - Unix timestamp of when the device connected to the NVR.
+ state: `DISCONNECTED` (enum[string], default) - Connection state of the device.
  + `CONNECTED`
  + `CONNECTING`
  + `DISCONNECTED`
+ lastDisconnect (number) - Unix timestamp of the last time the device disconnected.
+ hardwareRevision: `null` (string, default) - Hardware revision of the device
+ firmwareVersion: `null` (string, default) - The version of firmware that is installed on the device.
+ latestFirmwareVersion: `null` (string, default) - The latest firmware version of the device.
+ firmwareBuild: `null` (string, default) - The build # of the firmware that is installed.
+ isUpdating: `false` (boolean, default) - Whether the device is currently updating
+ isDownloadingFW: `false` (boolean, default) - Whether the device is currently downloading a FW for an upgrade
+ fwUpdateState: `null` (enum[string], default) - The device FW update state.
  + `upToDate`
  + `preparing`
  + `updating`
  + `downloading`
  + `failed`
  + `queueing`
  + `updateAvailable`
+ isAdopting: `false` (boolean, default) - Whether or not the device is currently being adopted.
+ isRestoring: `false` (boolean, default) - Whether or not the device is currently being restored.
+ isAdopted: `false` (boolean, default) - Whether or not the device is adopted.
+ isAdoptedByOther: `false` (boolean, default) - Whether or not the device is adopted by the other controller.
+ isProvisioned: `false` (boolean, default) - Whether or not the device is provisioned.
+ isRebooting: `false` (boolean, default) - Whether the device is currently rebooting
+ isSshEnabled: `false` (boolean, default) - Whether or not SSH is enabled
+ canAdopt: `false` (boolean, default) - Whether or not the device can be adopted.
+ isAttemptingToConnect: `false` (boolean, default) - Whether the device is attempting to connect to the controller
+ wiredConnectionState (wiredConnectionState) - Wired connection state of the device.
+ isConnected (boolean) - Whether the device IPC is connected?
+ marketName (string) - The marketing name for the sensor.
+ nvrMac: `24A43C3DFEB9` (string) - The MAC address of the NVR managed this device.
+ guid: `null` (string, default) - Unique id of the device
+ anonymousDeviceId: `null` (string, default) - Persistent unique device identifier.
+ isMotionDetected: `false` (boolean, default) - Whether sensor is currently detecting the motion.
+ mountType: `none` (enum[string], default) - Mounting type of the sensor.
  + `door`
  + `window`
  + `garage`
  + `leak`
  + `none`
+ leakDetectedAt (number) - Unix timestamp when the sensor detected a water leak, nullable.
+ tamperingDetectedAt (number) - Unix timestamp when the sensor detected tampering, nullable.
+ isOpened: `false` (boolean, default) - Whether the door/window/garage is opened.
+ openStatusChangedAt (number) - Unix timestamp when the door/window/garage was last opened or closed, nullable.
+ alarmTriggeredAt (number) - Unix timestamp when the smoke or carbon monoxide alarm was triggered, nullable.
+ motionDetectedAt (number) - Unix timestamp when the last motion was detected.
+ stats (sensorStats) - Sensor statistics.
+ bluetoothConnectionState (bluetoothConnectionState) - Bluetooth connection state of the sensor.
+ batteryStatus (sensorBatteryStatus) - Battery status.
+ alarmSettings (alarmSensorSettings) - Smoke and carbon monoxide alarm sensor settings.
+ lightSettings (lightSensorSettings) - Ambient light sensor settings.
+ motionSettings (motionSensorSettings) - Motion sensor settings.
+ temperatureSettings (temperatureSensorSettings) - Temperature sensor settings.
+ humiditySettings (humiditySensorSettings) - Relative humidity sensor settings.
+ ledSettings (sensorLedSettings) - Status LED settings.
+ bridge (string) - Which bridge is able to connect to the sensor.
+ camera (string) - Which camera is configured to be paired to the sensor.
+ bridgeCandidates: `[]` (array[bridgeCandidate], default) - A list of bridge candidates for adoption and reconnection.

## `sensors` (array[`sensor`])

## sensorStats (object)

+ light (lightSensor) - Ambient light value (Lux).
+ humidity (humiditySensor) - Relative humidity value (%).
+ temperature (temperatureSensor) - Temperature value (Celsius).

## `sensorStatss` (array[`sensorStats`])

## temperatureSensor (object)

+ value (number) - Reading value.
+ status: `unknown` (enum[string], default) - Reading status.
  + `neutral`
  + `low`
  + `safe`
  + `high`
  + `unknown`

## `temperatureSensors` (array[`temperatureSensor`])

## temperatureSensorSettings (object)

+ isEnabled: `false` (boolean, default) - Enable temperature sensor.
+ lowThreshold (number) - Temperature low level threshold from -39 to 124 (C).
+ highThreshold (number) - Temperature high level threshold from -39 to 124 (C).
+ margin: `0.1` (number, default) - Temperature threshold detection hysteresis margin (C).

## `temperatureSensorSettingss` (array[`temperatureSensorSettings`])

## smartDetectObjectGroup (object)

+ id: `5be5fbde01331d19da0003e9`(string) - Primary key.
+ image (array) - The image of group.
+ isImageFixed (boolean) - Whether the image is fixed.
+ imageUpdatedAt: `1445408038748` (number) - The last time the image was updated.
+ type (string) - Type of the group
+ name (string) - Name of the group
+ detectionsCount: `0` (number, default) - count of detections of this group
+ firstDetectedAt: `0` (number, default) - first object detected at
+ lastDetectedAt: `0` (number, default) - last object detected at
+ isNotificationEnabled: `false` (boolean, default) - notification enabled
+ imagePath (string) - The image path of group.
+ createdAt (string) - the create time of this record
+ tags: `[]` (array[string], default) - tags of the group
+ description (string) - description of the group

## `smartDetectObjectGroups` (array[`smartDetectObjectGroup`])

## smartDetectObject (object)

+ id: `5be5fbde01331d19da0003e9`(string) - Primary key.
+ event (string) - Which event this smart detection object belongs to.
+ thumbnail (string) - Which thumbnail this smart detection object belongs to.
+ camera (string) - Which camera this smart detection object belongs to.
+ type (string) - Type the smart object
+ attributes (object) - Attributes from firmware side
+ matchedGroup (string) - matched group
+ detectedAt (number) - When the smart detection object was detected

## `smartDetectObjects` (array[`smartDetectObject`])

## smartDetectRaw (object)

+ id: `5be5fbde01331d19da0003e9`(string) - Primary key.
+ camera (string) - Which camera this smart detection track belongs to.
+ payload (object) - Raw Payload of the smart detection
+ timestamp: `1445408040748` (number) - Unix timestamp of the smartDetect raw data.

## `smartDetectRaws` (array[`smartDetectRaw`])

## smartDetectTrackPayload (object)

+ id: `1` (string) - The ID of the object in the corresponding event.
+ timestamp: `1445408038748` (number) - Unix timestamp of the time of the object detected in milliseconds.
+ level: `20` (number) - The confidence level of the object detection. (0-100)
+ coord: `[7,19,411,746]` (array) - The coordinates of the object detected [x1, y1, x2, y2]. (0-1000)
+ licensePlate: `233051P` (string) - Recognized license plate
+ objectType: `person` (string) - The type of object detected.
+ zones: `[1,2]` (array) - The IDs of the zones that the object detected in.
+ lines: `[1,3,4]` (array) - The IDs of the lines that the object crossed.
+ duration: `300` (number) - The display duration of the bounding box of the object in milliseconds.
+ stationary: `false` (boolean) - Whether this track includes stationary vehicle
+ attributes (object) - The detected attributes of this track

## `smartDetectTrackPayloads` (array[`smartDetectTrackPayload`])

## smartDetectTrack (object)

+ id: `5be5fbde01331d19da0003e9`(string) - Primary key.
+ payload (array[smartDetectTrackPayload]) - The payload of the smart detection track.
+ event (string) - Which event this smart detection track belongs to.
+ camera (string) - Which camera this smart detection track belongs to.

## `smartDetectTracks` (array[`smartDetectTrack`])

## bluetoothConnectionState (object)

+ signalQuality (number) - Percent representation of Bluetooth signal strength.
+ signalStrength (number) - dBm value of Bluetooth signal strength.

## `bluetoothConnectionStates` (array[`bluetoothConnectionState`])

## cpu (object)

+ model: `Intel(R) Core(TM) i7-7820HQ CPU @ 2.90GHz` (string) - Identifying information about a CPU.
+ speed: `2900` (number) - Speed in MHz.
+ times (cpuTimes) - The times the CPU has spent in various modes.

## `cpus` (array[`cpu`])

## cpuTimes (object)

+ user: `31738380` (number) - Number of milliseconds the CPU has spent in user mode.
+ nice: `0` (number) - Number of milliseconds the CPU has spent in nice mode.
+ sys: `22306330` (number) - Number of milliseconds the CPU has spent in sys mode.
+ idle: `294432330` (number) - Number of milliseconds the CPU has spent in idle mode.
+ irq: `0` (number) - Number of milliseconds the CPU has spent in irq mode.

## `cpuTimess` (array[`cpuTimes`])

## memory (object)

+ free: `5102927872` (number) - Amount of free system memory in bytes returned by os.freemem()
+ rss: `22605824` (number) - Resident set size, returned by process.memoryUsage().
+ heapTotal: `7708672` (number) - Total size of the allocated heap, returned by process.memoryUsage().
+ heapUsed: `5615928` (number) - Actual size of the heap used, returned by process.memoryUsage().
+ external: `8648` (number) - Memory usage of C++ objects bound to JavaScript objects managed by V8, returned by process.memoryUsage().

## `memorys` (array[`memory`])

## stat (object)

+ id: `5be5fbde01331d19da0003e9`(string) - Primary key.
+ timestamp: `1445408038748` (number) - Unix timestamp of the time of the stat.
+ memory (memory) - An object containing information about memory usage.
+ cpus (array[cpu]) - A list of objects, returned by os.cpus(), containing information about each logical CPU core.
+ tmpfs (number) - How full is tmpfs in percentage

## `stats` (array[`stat`])

## wifiConnectionState (object)

+ channel (number) - WLAN frequency channel.
+ frequency (number) - Center frequency of WLAN channel.
+ phyRate (number) - Maximum physical link rate in Mbps.
+ txRate (number) - Maximum physical link rate in Mbps.
+ signalQuality (number) - Percent representation of Wi-Fi signal strength.
+ ssid: `null` (string, default) - WLAN ssid
+ bssid: `null` (string, default) - WLAN bssid
+ apName: `null` (string, default) - AP name
+ signalStrength (number) - dBm value of Wi-Fi signal strength.
+ experience (number) - Connection experience as seen from AP and Network APP.
+ connectivity (string) - Connectivity of wireless device.

## `wifiConnectionStates` (array[`wifiConnectionState`])

## wiredConnectionState (object)

+ phyRate (number) - Maximum physical link rate in Mbps.

## `wiredConnectionStates` (array[`wiredConnectionState`])

## update (object)

+ id: `5be5fbde01331d19da0003e9`(string) - Primary key.
+ downloadedAt: `1534803977545` (number) - Timestamp of when the update was downloaded.
+ path (string) - The path to the file on the fs.
+ platform (string)
+ product: `viewer` (string) - The product type that the update is for
+ type (enum[string])
  + `firmware`
  + `software`
+ version: `1.10.0-alpha.1` (string) - Version of tracked update
+ isLocal: `false` (boolean, default) - If this update was pulled from the local filesystem.
+ isIntermediate: `false` (boolean, default) - If this is an intermediate update.
+ md5: `null` (string, default) - MD5 file checksum.

## `updates` (array[`update`])

## userFeatureFlags (object)

+ notificationsV2: `true` (boolean, default) - Whether security rules and notifications are migrated to V2.

## `userFeatureFlagss` (array[`userFeatureFlags`])

## userLocation (object)

+ isAway: `true` (boolean, default) - If the user is away (true if location not available).
+ homeAwaySince: `1445408038748` (number) - Unix timestamp of when the user's location status changed.
+ latitude (number) - The user's current latitude.
+ longitude (number) - The user's current longitude.

## `userLocations` (array[`userLocation`])

## user (object)

+ id: `5be5fbde01331d19da0003e9`(string) - Primary key.
+ name (string) - The user name (first-name + last-name).
+ firstName (string) - The user first-name.
+ lastName (string) - The user last-name.
+ email (string) - The user email.
+ localUsername (string) - The username for local user.
+ hasAcceptedInvite (boolean) - Whether the user accepted the invitation.
+ cloudAccount (object) - The user cloud account.
+ scopes (array) - The user scope permissions from ucore/ulp-go
+ allPermissions (array) - The user's all permissions.
+ groups (array[string]) - A list of groups this user is a member of.
+ permissions: `[]` (array, default) - The list of permissions granted to this user.
+ location (userLocation) - The user's current location.
+ lastLoginIp: `66.129.12.24` (string) - The last IP the user logged in from.
+ lastLoginTime: `1445408038748` (number) - Unix timestamp of the last time the user logged in.
+ isOwner: `false` (boolean, default) - Whether or not the user is a super admin.
+ enableNotifications: `false` (boolean, default) - Whether the user wants to receive email/push notifications.
+ settings (object) - Open-ended JSON for clients to store whatever persistent settings they need.
+ alertRules (array[alertRules]) - The user's alert rules.
+ notificationsV2 (notificationsV2) - User's notifications settings.
+ notifications (notifications) - User's notification settings.
+ featureFlags (userFeatureFlags) - Feature flags.
+ cloudProviders (cloudProviders) - Cloud providers.

## `users` (array[`user`])

## alertRule (object)

+ geofencing (enum[string]) - The geofencing when
  + `always`
  + `away`
  + `allAway`
  + `never`
  + `schedule`
  + `off`
+ id: `a1d4b2e5c3` (string) - The ID of the alert rule, generated by the controller.
+ name: `Default` (string) - The name of the alert rule.
+ schedule (alertSchedule) - The schedule for this rule (only applies if when is set to schedule).
+ when: `always` (enum[string], default) - When to send alerts.
  + `always`
  + `away`
  + `allAway`
  + `never`
  + `schedule`
+ system (systemAlertItem) - System alert config.
+ cameras (array[cameraAlertItems]) - The cameras alerts config.
+ users (array[userAlertItems]) - The users alerts config.

## `alertRules` (array[`alertRule`])

## alertSchedule (object)

+ name: `Schedule A` (string) - The name of the schedule.
+ items (array[alertScheduleItems]) - A list of the items this alert schedule comprises.

## `alertSchedules` (array[`alertSchedule`])

## alertScheduleItem (object)

+ dayStart: `0` (number, default) - Day of the week (0-6) when this alert schedule item starts.
+ dayEnd: `0` (number, default) - Day of the week (0-6) when this alert schedule item ends.
+ minuteStart: `0` (number, default) - Minute of the day (0-1440) when this alert schedule item starts.
+ minuteEnd: `0` (number, default) - Minute of the day (0-1440) when this alert schedule item ends.
+ geofencing: `off` (enum[string], default) - Geofence setting for this alert schedule item.
  + `off`
  + `away`
  + `allAway`

## `alertScheduleItems` (array[`alertScheduleItem`])

## cameraAlertItem (object)

+ camera: `CA1B2C3` (string) - The camera to which this alert item belongs (null means All Cameras).
+ connectDisconnect: `[]` (enum[array]) - Alert actions to take when the camera connects/disconnects.
  + `email`
  + `push`
+ motion: `["email"]` (enum[array]) - Alert actions to take when the camera detects motion.
  + `email`
  + `push`
+ ring: `["push"]` (enum[array]) - Alert actions to take when the doorbell rings.
  + `push`
+ smartDetect: `["email"]` (enum[array]) - Alert actions to take when the camera detects objects.
  + `email`
  + `push`

## `cameraAlertItems` (array[`cameraAlertItem`])

## systemAlertItem (object)

+ connectDisconnect: `["email"]` (enum[array]) - Alert action to take when the nvr connects/disconnects.
  + `email`
  + `push`
+ update: `["email","push"]` (enum[array]) - Alert action to take when there is update activity on the nvr.
  + `email`
  + `push`

## `systemAlertItems` (array[`systemAlertItem`])

## userAlertItem (object)

+ user: `CA1B2C3` (string) - The user to which this alert item belongs (null means all users).
+ arrive: `["push"]` (enum[array]) - Alert action to take when the user arrives on site.
  + `email`
  + `push`
+ depart: `[]` (enum[array]) - Alert action to take when the user departs the site.
  + `email`
  + `push`

## `userAlertItems` (array[`userAlertItem`])

## googleProvider (object)

+ email: `null` (string, default) - Google user email.

## `googleProviders` (array[`googleProvider`])

## cloudProviders (object)

+ google (googleProvider) - Google Cloud Provider

## `cloudProviderss` (array[`cloudProviders`])

## cloudIdentity (object)

+ id: `5be5fbde01331d19da0003e9`(string) - Primary key.
+ cloudId (string) - The id of cloudIdentity.
+ name (string) - The user name (first-name + last-name).
+ user (string) - Which user this identity is attached to
+ firstName: `null` (string, default) - First name of the user
+ lastName: `null` (string, default) - Last name of the user
+ email: `null` (string, default) - Email address
+ profileImg: `https://lh5.googleusercontent.com/-tIWGrA8WsDM/AAAAAAAAAAI/AAAAAAAAAHU/doQShUuGqb0/photo.jpg?sz=50` (string) - Profile img

## `cloudIdentities` (array[`cloudIdentity`])

## ucoreIdentity (object)

+ id: `5be5fbde01331d19da0003e9`(string) - Primary key.
+ user (string) - Which user this identity is attached to
+ firstName: `null` (string, default) - First name
+ email: `me@me.com` (string) - Email address
+ profileImg: `https://lh5.googleusercontent.com/-tIWGrA8WsDM/AAAAAAAAAAI/AAAAAAAAAHU/doQShUuGqb0/photo.jpg?sz=50` (string) - Profile img
+ scopes: `[]` (array, default) - The user scope permissions from ucore/ulp-go

## `ucoreIdentities` (array[`ucoreIdentity`])

## detectionNotifications (object)

+ trigger (detectionTrigger) - Trigger identifying when to send notifications.
+ ring: `["email"]` (enum[array]) - Channels to send to, when doorbell rings.
  + `email`
  + `push`
+ motion: `["email"]` (enum[array]) - Channels to send to, when motion detected.
  + `email`
  + `push`
+ person: `["email"]` (enum[array]) - Channels to send to, when person detected.
  + `email`
  + `push`
+ vehicle: `["email"]` (enum[array]) - Channels to send to, when vehicle detected.
  + `email`
  + `push`
+ animal: `["email"]` (enum[array]) - Channels to send to, when animal detected.
  + `email`
  + `push`
+ package: `["email"]` (enum[array]) - Channels to send to, when package detected.
  + `email`
  + `push`
+ alarmSmokeCmonx: `["email"]` (enum[array]) - Channels to send to, when CO or smoke detected.
  + `email`
  + `push`
+ alarmSmoke: `["email"]` (enum[array]) - Channels to send to, when smoke detected.
  + `email`
  + `push`
+ alarmCmonx: `["email"]` (enum[array]) - Channels to send to, when CO detected.
  + `email`
  + `push`
+ alarmSiren: `["email"]` (enum[array]) - Channels to send to, when siren detected.
  + `email`
  + `push`
+ alarmBabyCry: `["email"]` (enum[array]) - Channels to send to, when baby cry detected.
  + `email`
  + `push`
+ alarmSpeak: `["email"]` (enum[array]) - Channels to send to, when speak detected.
  + `email`
  + `push`
+ alarmBark: `["email"]` (enum[array]) - Channels to send to, when bark detected.
  + `email`
  + `push`
+ alarmBurglar: `["email"]` (enum[array]) - Channels to send to, when burglar detected.
  + `email`
  + `push`
+ alarmCarHorn: `["email"]` (enum[array]) - Channels to send to, when car horn detected.
  + `email`
  + `push`
+ alarmGlassBreak: `["email"]` (enum[array]) - Channels to send to, when glass break detected.
  + `email`
  + `push`
+ sensorAlarm: `["email"]` (enum[array]) - Channels to send to, when sensor warning detected.
  + `email`
  + `push`
+ batteryStatus: `["email"]` (enum[array]) - Channels to send to, when battery status change detected
  + `email`
  + `push`
+ doorlockOpen: `["email"]` (enum[array]) - Channels to send to, when doorlock opened detected
  + `email`
  + `push`
+ doorlockClosed: `["email"]` (enum[array]) - Channels to send to, when doorlock closed detected
  + `email`
  + `push`
+ extremeValues: `["email"]` (enum[array]) - Channels to send to, when extreme values detected
  + `email`
  + `push`
+ waterLeak: `["email"]` (enum[array]) - Channels to send to, when water leak detected
  + `email`
  + `push`
+ sensorEntryStateChange: `["email"]` (enum[array]) - Channels to send to, when sensor entry state change detected.
  + `email`
  + `push`
+ faceGroupDetected: `["email"]` (enum[array]) - Channels to send to, when face group detected.
  + `email`
  + `push`
+ cameras (array[cameraDetections]) - The cameras notifications config.
+ doorbells (array[doorbellDetections]) - The doorbells notifications config.
+ lights (array[lightDetections]) - The lights notifications config.
+ doorlocks (array[doorlockDetections]) - The doorlocks notifications config.
+ sensors (array[sensorDetections]) - The sensors notifications config.

## `detectionNotificationss` (array[`detectionNotifications`])

## detectionTrigger (object)

+ when: `inherit` (enum[string], default) - When to send notifications. By default inherit from global settings.
  + `inherit`
  + `always`
  + `never`
  + `schedule`
  + `location`
+ schedules (array[scheduleRule]) - The schedule for this trigger (only applies if when is set to schedule).
+ location: `away` (enum[string], default) - Location trigger type (only applies if when is set to location).
  + `away`
  + `allAway`
+ sendAnyway: `false` (boolean, default) - Whether should send notification if away regardless of schedule.

## `detectionTriggers` (array[`detectionTrigger`])

## notifications (object)

+ state: `on` (enum[string], default) - Notification active state
  + `on`
  + `off`
+ detectionNotifications (detectionNotifications) - Detection notifications.
+ systemEventNotifications (systemEventNotifications) - Global system event notifications.

## `notificationss` (array[`notifications`])

## systemEventNotifications (object)

+ deviceIssue: `["email"]` (enum[array]) - Device issue notification channels.
  + `email`
  + `push`
+ applicationIssue: `["email"]` (enum[array]) - Application issue notification channels.
  + `email`
  + `push`
+ deviceAdoptedRemoved: `["email"]` (enum[array]) - Device adopted or removed notification channels.
  + `email`
  + `push`
+ deviceLimitationReached: `["email"]` (enum[array]) - Device limitation reached notification channels.
  + `email`
  + `push`
+ deviceDiscovery: `["email"]` (enum[array]) - Device discovery notification channels.
  + `email`
  + `push`
+ deviceUpdateStatus: `["email"]` (enum[array]) - Device update status notification channels.
  + `email`
  + `push`
+ adminAccess: `["email"]` (enum[array]) - Admin access notification channels.
  + `email`
  + `push`
+ adminChangeSettings: `["email"]` (enum[array]) - Admin change notification channels.
  + `email`
  + `push`
+ adminRecordingClipsManipulations: `["email"]` (enum[array]) - Admin recording clip manipulations notification channels.
  + `email`
  + `push`
+ adminGeolocation: `["email"]` (enum[array]) - Geofence notification channels.
  + `email`
  + `push`

## `systemEventNotificationss` (array[`systemEventNotifications`])

## cameraDetection (object)

+ camera: `CA1B2C3` (string) - The camera to which this notification belongs to.
+ trigger (motionTrigger) - Trigger describing when to send notifications.
+ inheritFromParent: `true` (boolean, default) - Inherit settings from the parent
+ motion: `["email"]` (enum[array]) - Channels to send to, when camera detects motion.
  + `email`
  + `push`
+ person: `["email"]` (enum[array]) - Channels to send to, when camera detects people.
  + `email`
  + `push`
+ vehicle: `["email"]` (enum[array]) - Channels to send to, when camera detects a vehicle.
  + `email`
  + `push`
+ animal: `["email"]` (enum[array]) - Channels to send to, when camera detects an animal.
  + `email`
  + `push`
+ package: `["email"]` (enum[array]) - Channels to send to, when camera detects a package.
  + `email`
  + `push`
+ alarmSmokeCmonx: `["email"]` (enum[array]) - Channels to send to, when camera detects a smoke/co alarm.
  + `email`
  + `push`
+ alarmSmoke: `["email"]` (enum[array]) - Channels to send to, when camera detects a smoke alarm.
  + `email`
  + `push`
+ alarmCmonx: `["email"]` (enum[array]) - Channels to send to, when camera detects a co alarm.
  + `email`
  + `push`
+ alarmSiren: `["email"]` (enum[array]) - Channels to send to, when camera detects a siren alarm.
  + `email`
  + `push`
+ alarmBabyCry: `["email"]` (enum[array]) - Channels to send to, when camera detects a baby cry alarm.
  + `email`
  + `push`
+ alarmSpeak: `["email"]` (enum[array]) - Channels to send to, when camera detects a speak alarm.
  + `email`
  + `push`
+ alarmBark: `["email"]` (enum[array]) - Channels to send to, when camera detects a bark alarm.
  + `email`
  + `push`
+ alarmBurglar: `["email"]` (enum[array]) - Channels to send to, when camera detects a burglar alarm.
  + `email`
  + `push`
+ alarmCarHorn: `["email"]` (enum[array]) - Channels to send to, when camera detects a car horn alarm.
  + `email`
  + `push`
+ alarmGlassBreak: `["email"]` (enum[array]) - Channels to send to, when camera detects a glass break alarm.
  + `email`
  + `push`
+ faceGroupDetected: `["email"]` (enum[array]) - Channels to send to, when face group detected.
  + `email`
  + `push`

## `cameraDetections` (array[`cameraDetection`])

## doorbellDetection (object)

+ doorbell: `CA1B2C3` (string) - The camera to which this security alert belongs to.
+ trigger (motionTrigger) - Trigger describing when to send notifications.
+ inheritFromParent: `true` (boolean, default) - Inherit settings from the parent
+ ring: `["push"]` (enum[array]) - Channels to send to, when doorbell rings.
  + `push`

## `doorbellDetections` (array[`doorbellDetection`])

## doorlockDetection (object)

+ doorlock: `DA1B2C3` (string) - The doorlock to which this security alert belongs to (null means All Doorlocks).
+ trigger (motionTrigger) - Trigger describing when to send notifications.
+ inheritFromParent: `true` (boolean, default) - Inherit settings from the parent
+ doorlockOpen: `["email"]` (enum[array]) - Channels to send to, when door got opened.
  + `email`
  + `push`
+ doorlockClosed: `["email"]` (enum[array]) - Channels to send to, when door got closed.
  + `email`
  + `push`
+ batteryStatus: `["email"]` (enum[array]) - Channels to send to, when battery status related events occur (battery low).
  + `email`
  + `push`

## `doorlockDetections` (array[`doorlockDetection`])

## lightDetection (object)

+ light: `CA1B2C3` (string) - The light to which this security alert belongs to.
+ trigger (motionTrigger) - Trigger describing when to send notifications.
+ inheritFromParent: `true` (boolean, default) - Inherit settings from the parent
+ motion: `["email"]` (enum[array]) - Channels to send to, when motion is detected.
  + `email`
  + `push`

## `lightDetections` (array[`lightDetection`])

## sensorDetection (object)

+ sensor: `SA1B2C3` (string) - The sensor to which this security alert belongs to.
+ trigger (motionTrigger) - Trigger describing when to send notifications.
+ inheritFromParent: `true` (boolean, default) - Inherit settings from the parent
+ motion: `["email"]` (enum[array]) - Channels to send to, when motion is detected.
  + `email`
  + `push`
+ sensorEntryStateChange: `["email"]` (enum[array]) - Channels to send to, when door/window got opened.
  + `email`
  + `push`
+ sensorAlarm: `["email"]` (enum[array]) - Channels to send to, when alarm is detected.
  + `email`
  + `push`
+ extremeValues: `["email"]` (enum[array]) - Channels to send to, when sensor detects extreme values.
  + `email`
  + `push`
+ waterLeak: `["email"]` (enum[array]) - Channels to send to, when sensor detects a water leak.
  + `email`
  + `push`
+ batteryStatus: `["email"]` (enum[array]) - Channels to send to, when battery status related events occur (battery low).
  + `email`
  + `push`

## `sensorDetections` (array[`sensorDetection`])

## notificationsV2 (object)

+ state: `auto` (enum[string], default) - Notifications settings state
  + `off`
  + `auto`
  + `custom`
+ motionNotifications (motionNotifications) - Motion notifications.
+ systemNotifications (systemNotifications) - System notifications.

## `notificationsV2s` (array[`notificationsV2`])

## cameraNotification (object)

+ camera: `CA1B2C3` (string) - The camera to which this notification belongs to (null means All Cameras).
+ trigger (motionTrigger) - Trigger describing when to send notifications.
+ inheritFromParent: `true` (boolean, default) - Inherit settings from the parent
+ motion: `["email"]` (enum[array]) - Channels to send to, when camera detects motion.
  + `email`
  + `push`
+ person: `["email"]` (enum[array]) - Channels to send to, when camera detects people.
  + `email`
  + `push`
+ vehicle: `["email"]` (enum[array]) - Channels to send to, when camera detects a vehicle.
  + `email`
  + `push`
+ package: `["email"]` (enum[array]) - Channels to send to, when camera detects a package.
  + `email`
  + `push`
+ alarmSmokeCmonx: `["email"]` (enum[array]) - Channels to send to, when camera detects a smoke/co alarm.
  + `email`
  + `push`

## `cameraNotifications` (array[`cameraNotification`])

## doorbellNotification (object)

+ doorbell: `CA1B2C3` (string) - The camera to which this security alert belongs to (null means All Cameras).
+ trigger (motionTrigger) - Trigger describing when to send notifications.
+ inheritFromParent: `true` (boolean, default) - Inherit settings from the parent
+ ring: `["push"]` (enum[array]) - Channels to send to, when doorbell rings.
  + `push`

## `doorbellNotifications` (array[`doorbellNotification`])

## doorlockNotification (object)

+ doorlock: `DA1B2C3` (string) - The doorlock to which this security alert belongs to (null means All Doorlocks).
+ trigger (motionTrigger) - Trigger describing when to send notifications.
+ inheritFromParent: `true` (boolean, default) - Inherit settings from the parent
+ doorOpen: `["email"]` (enum[array]) - Channels to send to, when door got opened.
  + `email`
  + `push`
+ doorClosed: `["email"]` (enum[array]) - Channels to send to, when door got closed.
  + `email`
  + `push`
+ batteryStatus: `["email"]` (enum[array]) - Channels to send to, when battery status related events occur (battery low).
  + `email`
  + `push`

## `doorlockNotifications` (array[`doorlockNotification`])

## lightNotification (object)

+ light: `CA1B2C3` (string) - The light to which this security alert belongs to (null means All Lights).
+ trigger (motionTrigger) - Trigger describing when to send notifications.
+ inheritFromParent: `true` (boolean, default) - Inherit settings from the parent
+ motion: `["email"]` (enum[array]) - Channels to send to, when motion is detected.
  + `email`
  + `push`

## `lightNotifications` (array[`lightNotification`])

## motionNotifications (object)

+ trigger (motionTrigger) - Trigger describing when to send notifications.
+ cameras (array[cameraNotifications]) - The cameras notifications config.
+ doorbells (array[doorbellNotifications]) - The doorbells notifications config.
+ lights (array[lightNotifications]) - The lights notifications config.
+ doorlocks (array[doorlockNotifications]) - The doorlocks notifications config.
+ sensors (array[sensorNotifications]) - The sensors notifications config.

## `motionNotificationss` (array[`motionNotifications`])

## motionTrigger (object)

+ when: `inherit` (enum[string], default) - When to send notifications.
  + `inherit`
  + `always`
  + `never`
  + `schedule`
  + `location`
+ schedules (array[scheduleRule]) - The schedule for this trigger (only applies if when is set to schedule).
+ location: `away` (enum[string], default) - Location trigger type (only applies if when is set to location).
  + `away`
  + `allAway`
+ sendAnyway: `false` (boolean, default) - Whether should send notification if away regardless of schedule.

## `motionTriggers` (array[`motionTrigger`])

## sensorNotification (object)

+ sensor: `SA1B2C3` (string) - The sensor to which this security alert belongs to (null means All Sensors).
+ trigger (motionTrigger) - Trigger describing when to send notifications.
+ inheritFromParent: `true` (boolean, default) - Inherit settings from the parent
+ motion: `["email"]` (enum[array]) - Channels to send to, when motion is detected.
  + `email`
  + `push`
+ doorOpen: `["email"]` (enum[array]) - Channels to send to, when door got opened.
  + `email`
  + `push`
+ alarm: `["email"]` (enum[array]) - Channels to send to, when alarm is detected.
  + `email`
  + `push`
+ extremeValues: `["email"]` (enum[array]) - Channels to send to, when sensor detects extreme values.
  + `email`
  + `push`
+ waterLeak: `["email"]` (enum[array]) - Channels to send to, when sensor detects a water leak.
  + `email`
  + `push`
+ batteryStatus: `["email"]` (enum[array]) - Channels to send to, when battery status related events occur (battery low).
  + `email`
  + `push`

## `sensorNotifications` (array[`sensorNotification`])

## systemNotifications (object)

+ deviceDiscovery: `["email"]` (enum[array]) - Device discovery notification channels.
  + `email`
  + `push`
+ cameraConnectionStatus: `["email"]` (enum[array]) - Device connection status notification channels.
  + `email`
  + `push`
+ geofence: `["email"]` (enum[array]) - Geofence notification channels.
  + `email`
  + `push`
+ footageManipulation: `["email"]` (enum[array]) - Footage manipulation notification channels.
  + `email`
  + `push`
+ recordingScheduleEdit: `["email"]` (enum[array]) - Recording schedule edit notification channels.
  + `email`
  + `push`
+ hddIssues: `["email"]` (enum[array]) - Hard drive issues notification channels.
  + `email`
  + `push`
+ deviceEvents: `["email"]` (enum[array]) - Other unclassified events notification channels.
  + `email`
  + `push`

## `systemNotificationss` (array[`systemNotifications`])

## videoArchive (object)

+ id: `5be5fbde01331d19da0003e9`(string) - Primary key.
+ user (string) - User that initiated the upload.
+ camera (string) - Camera that holds uploaded video.
+ status: `pending` (string, default) - Upload status.
+ destination (string) - Video archive destination.
+ externalFileId: `null` (string, default) - External file ID.
+ metadata (object) - File data used for export.
+ fileSize: `0` (number, default) - File size in MB.
+ failReason: `null` (string, default) - Reason for upload failure.

## `videoArchives` (array[`videoArchive`])

## viewer (object)

+ id: `5be5fbde01331d19da0003e9`(string) - Primary key.
+ mac: `24A43C3DFEB9` (string) - The primary MAC address of the device.
+ host: `null` (string, default) - The primary IP address of the device.
+ connectionHost: `null` (string, default) - The ip or hostname the device uses to connect.
+ type: `null` (string, default) - The device model name.
+ name: `null` (string, default) - The name of the device.
+ upSince (number) - Unix timestamp of when the device started up.
+ uptime (number) - device uptime in second.
+ lastSeen (number) - Unix timestamp of when the device was last connected.
+ connectedSince (number) - Unix timestamp of when the device connected to the NVR.
+ state: `DISCONNECTED` (enum[string], default) - Connection state of the device.
  + `CONNECTED`
  + `CONNECTING`
  + `DISCONNECTED`
+ lastDisconnect (number) - Unix timestamp of the last time the device disconnected.
+ hardwareRevision: `null` (string, default) - Hardware revision of the device
+ firmwareVersion: `null` (string, default) - The version of firmware that is installed on the device.
+ latestFirmwareVersion: `null` (string, default) - The latest firmware version of the device.
+ firmwareBuild: `null` (string, default) - The build # of the firmware that is installed.
+ isUpdating: `false` (boolean, default) - Whether the device is currently updating
+ isDownloadingFW: `false` (boolean, default) - Whether the device is currently downloading a FW for an upgrade
+ fwUpdateState: `null` (enum[string], default) - The device FW update state.
  + `upToDate`
  + `preparing`
  + `updating`
  + `downloading`
  + `failed`
  + `queueing`
  + `updateAvailable`
+ isAdopting: `false` (boolean, default) - Whether or not the device is currently being adopted.
+ isRestoring: `false` (boolean, default) - Whether or not the device is currently being restored.
+ isAdopted: `false` (boolean, default) - Whether or not the device is adopted.
+ isAdoptedByOther: `false` (boolean, default) - Whether or not the device is adopted by the other controller.
+ isProvisioned: `false` (boolean, default) - Whether or not the device is provisioned.
+ isRebooting: `false` (boolean, default) - Whether the device is currently rebooting
+ isSshEnabled: `false` (boolean, default) - Whether or not SSH is enabled
+ canAdopt: `false` (boolean, default) - Whether or not the device can be adopted.
+ isAttemptingToConnect: `false` (boolean, default) - Whether the device is attempting to connect to the controller
+ wiredConnectionState (wiredConnectionState) - Wired connection state of the device.
+ isConnected (boolean) - Whether the device IPC is connected?
+ marketName (string) - The marketing name for the viewport.
+ nvrMac: `24A43C3DFEB9` (string) - The MAC address of the NVR managed this device.
+ guid: `null` (string, default) - Unique id of the device
+ anonymousDeviceId: `null` (string, default) - Persistent unique device identifier.
+ liveview (string) - Which liveview is configured to be pushed to this viewer
+ streamLimit: `16` (number, default) - Max supported parallel live streams.
+ softwareVersion: `1.0.0` (string) - Software version.

## `viewers` (array[`viewer`])

